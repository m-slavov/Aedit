/*
 * generated by Xtext 2.21.0
 */
grammar InternalAedit;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.aedit.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.aedit.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.aedit.services.AeditGrammarAccess;

}
@parser::members {
	private AeditGrammarAccess grammarAccess;

	public void setGrammarAccess(AeditGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeature
entryRuleFeature
:
{ before(grammarAccess.getFeatureRule()); }
	 ruleFeature
{ after(grammarAccess.getFeatureRule()); } 
	 EOF 
;

// Rule Feature
ruleFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureAccess().getGroup()); }
		(rule__Feature__Group__0)
		{ after(grammarAccess.getFeatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeatureMap
entryRuleFeatureMap
:
{ before(grammarAccess.getFeatureMapRule()); }
	 ruleFeatureMap
{ after(grammarAccess.getFeatureMapRule()); } 
	 EOF 
;

// Rule FeatureMap
ruleFeatureMap 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureMapAccess().getGroup()); }
		(rule__FeatureMap__Group__0)
		{ after(grammarAccess.getFeatureMapAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRuleMap
entryRuleRuleMap
:
{ before(grammarAccess.getRuleMapRule()); }
	 ruleRuleMap
{ after(grammarAccess.getRuleMapRule()); } 
	 EOF 
;

// Rule RuleMap
ruleRuleMap 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleMapAccess().getGroup()); }
		(rule__RuleMap__Group__0)
		{ after(grammarAccess.getRuleMapAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRuleDeclaration
entryRuleRuleDeclaration
:
{ before(grammarAccess.getRuleDeclarationRule()); }
	 ruleRuleDeclaration
{ after(grammarAccess.getRuleDeclarationRule()); } 
	 EOF 
;

// Rule RuleDeclaration
ruleRuleDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleDeclarationAccess().getGroup()); }
		(rule__RuleDeclaration__Group__0)
		{ after(grammarAccess.getRuleDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGenericRule
entryRuleGenericRule
:
{ before(grammarAccess.getGenericRuleRule()); }
	 ruleGenericRule
{ after(grammarAccess.getGenericRuleRule()); } 
	 EOF 
;

// Rule GenericRule
ruleGenericRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGenericRuleAccess().getAlternatives()); }
		(rule__GenericRule__Alternatives)
		{ after(grammarAccess.getGenericRuleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSchemaRule
entryRuleSchemaRule
:
{ before(grammarAccess.getSchemaRuleRule()); }
	 ruleSchemaRule
{ after(grammarAccess.getSchemaRuleRule()); } 
	 EOF 
;

// Rule SchemaRule
ruleSchemaRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSchemaRuleAccess().getAlternatives()); }
		(rule__SchemaRule__Alternatives)
		{ after(grammarAccess.getSchemaRuleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumRule
entryRuleEnumRule
:
{ before(grammarAccess.getEnumRuleRule()); }
	 ruleEnumRule
{ after(grammarAccess.getEnumRuleRule()); } 
	 EOF 
;

// Rule EnumRule
ruleEnumRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumRuleAccess().getAlternatives()); }
		(rule__EnumRule__Alternatives)
		{ after(grammarAccess.getEnumRuleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChangeSchema
entryRuleChangeSchema
:
{ before(grammarAccess.getChangeSchemaRule()); }
	 ruleChangeSchema
{ after(grammarAccess.getChangeSchemaRule()); } 
	 EOF 
;

// Rule ChangeSchema
ruleChangeSchema 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChangeSchemaAccess().getGroup()); }
		(rule__ChangeSchema__Group__0)
		{ after(grammarAccess.getChangeSchemaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChangeEnum
entryRuleChangeEnum
:
{ before(grammarAccess.getChangeEnumRule()); }
	 ruleChangeEnum
{ after(grammarAccess.getChangeEnumRule()); } 
	 EOF 
;

// Rule ChangeEnum
ruleChangeEnum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChangeEnumAccess().getGroup()); }
		(rule__ChangeEnum__Group__0)
		{ after(grammarAccess.getChangeEnumAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdd
entryRuleAdd
:
{ before(grammarAccess.getAddRule()); }
	 ruleAdd
{ after(grammarAccess.getAddRule()); } 
	 EOF 
;

// Rule Add
ruleAdd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddAccess().getAlternatives()); }
		(rule__Add__Alternatives)
		{ after(grammarAccess.getAddAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddRecord
entryRuleAddRecord
:
{ before(grammarAccess.getAddRecordRule()); }
	 ruleAddRecord
{ after(grammarAccess.getAddRecordRule()); } 
	 EOF 
;

// Rule AddRecord
ruleAddRecord 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddRecordAccess().getGroup()); }
		(rule__AddRecord__Group__0)
		{ after(grammarAccess.getAddRecordAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddEnumeration
entryRuleAddEnumeration
:
{ before(grammarAccess.getAddEnumerationRule()); }
	 ruleAddEnumeration
{ after(grammarAccess.getAddEnumerationRule()); } 
	 EOF 
;

// Rule AddEnumeration
ruleAddEnumeration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddEnumerationAccess().getGroup()); }
		(rule__AddEnumeration__Group__0)
		{ after(grammarAccess.getAddEnumerationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddVariable
entryRuleAddVariable
:
{ before(grammarAccess.getAddVariableRule()); }
	 ruleAddVariable
{ after(grammarAccess.getAddVariableRule()); } 
	 EOF 
;

// Rule AddVariable
ruleAddVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddVariableAccess().getGroup()); }
		(rule__AddVariable__Group__0)
		{ after(grammarAccess.getAddVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddEnum
entryRuleAddEnum
:
{ before(grammarAccess.getAddEnumRule()); }
	 ruleAddEnum
{ after(grammarAccess.getAddEnumRule()); } 
	 EOF 
;

// Rule AddEnum
ruleAddEnum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddEnumAccess().getGroup()); }
		(rule__AddEnum__Group__0)
		{ after(grammarAccess.getAddEnumAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRemoveSchema
entryRuleRemoveSchema
:
{ before(grammarAccess.getRemoveSchemaRule()); }
	 ruleRemoveSchema
{ after(grammarAccess.getRemoveSchemaRule()); } 
	 EOF 
;

// Rule RemoveSchema
ruleRemoveSchema 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRemoveSchemaAccess().getGroup()); }
		(rule__RemoveSchema__Group__0)
		{ after(grammarAccess.getRemoveSchemaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRemoveVariable
entryRuleRemoveVariable
:
{ before(grammarAccess.getRemoveVariableRule()); }
	 ruleRemoveVariable
{ after(grammarAccess.getRemoveVariableRule()); } 
	 EOF 
;

// Rule RemoveVariable
ruleRemoveVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRemoveVariableAccess().getGroup()); }
		(rule__RemoveVariable__Group__0)
		{ after(grammarAccess.getRemoveVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRemoveEnum
entryRuleRemoveEnum
:
{ before(grammarAccess.getRemoveEnumRule()); }
	 ruleRemoveEnum
{ after(grammarAccess.getRemoveEnumRule()); } 
	 EOF 
;

// Rule RemoveEnum
ruleRemoveEnum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRemoveEnumAccess().getGroup()); }
		(rule__RemoveEnum__Group__0)
		{ after(grammarAccess.getRemoveEnumAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRenameSchema
entryRuleRenameSchema
:
{ before(grammarAccess.getRenameSchemaRule()); }
	 ruleRenameSchema
{ after(grammarAccess.getRenameSchemaRule()); } 
	 EOF 
;

// Rule RenameSchema
ruleRenameSchema 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRenameSchemaAccess().getGroup()); }
		(rule__RenameSchema__Group__0)
		{ after(grammarAccess.getRenameSchemaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRenameVariable
entryRuleRenameVariable
:
{ before(grammarAccess.getRenameVariableRule()); }
	 ruleRenameVariable
{ after(grammarAccess.getRenameVariableRule()); } 
	 EOF 
;

// Rule RenameVariable
ruleRenameVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRenameVariableAccess().getGroup()); }
		(rule__RenameVariable__Group__0)
		{ after(grammarAccess.getRenameVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRenameEnum
entryRuleRenameEnum
:
{ before(grammarAccess.getRenameEnumRule()); }
	 ruleRenameEnum
{ after(grammarAccess.getRenameEnumRule()); } 
	 EOF 
;

// Rule RenameEnum
ruleRenameEnum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRenameEnumAccess().getGroup()); }
		(rule__RenameEnum__Group__0)
		{ after(grammarAccess.getRenameEnumAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChangeDefValue
entryRuleChangeDefValue
:
{ before(grammarAccess.getChangeDefValueRule()); }
	 ruleChangeDefValue
{ after(grammarAccess.getChangeDefValueRule()); } 
	 EOF 
;

// Rule ChangeDefValue
ruleChangeDefValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChangeDefValueAccess().getGroup()); }
		(rule__ChangeDefValue__Group__0)
		{ after(grammarAccess.getChangeDefValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChangeType
entryRuleChangeType
:
{ before(grammarAccess.getChangeTypeRule()); }
	 ruleChangeType
{ after(grammarAccess.getChangeTypeRule()); } 
	 EOF 
;

// Rule ChangeType
ruleChangeType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChangeTypeAccess().getGroup()); }
		(rule__ChangeType__Group__0)
		{ after(grammarAccess.getChangeTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleField
entryRuleField
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldAccess().getAlternatives()); }
		(rule__Field__Alternatives)
		{ after(grammarAccess.getFieldAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCustomTypeField
entryRuleCustomTypeField
:
{ before(grammarAccess.getCustomTypeFieldRule()); }
	 ruleCustomTypeField
{ after(grammarAccess.getCustomTypeFieldRule()); } 
	 EOF 
;

// Rule CustomTypeField
ruleCustomTypeField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCustomTypeFieldAccess().getGroup()); }
		(rule__CustomTypeField__Group__0)
		{ after(grammarAccess.getCustomTypeFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimitiveTypeField
entryRulePrimitiveTypeField
:
{ before(grammarAccess.getPrimitiveTypeFieldRule()); }
	 rulePrimitiveTypeField
{ after(grammarAccess.getPrimitiveTypeFieldRule()); } 
	 EOF 
;

// Rule PrimitiveTypeField
rulePrimitiveTypeField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimitiveTypeFieldAccess().getGroup()); }
		(rule__PrimitiveTypeField__Group__0)
		{ after(grammarAccess.getPrimitiveTypeFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getAlternatives()); }
		(rule__Value__Alternatives)
		{ after(grammarAccess.getValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFloatValue
entryRuleFloatValue
:
{ before(grammarAccess.getFloatValueRule()); }
	 ruleFloatValue
{ after(grammarAccess.getFloatValueRule()); } 
	 EOF 
;

// Rule FloatValue
ruleFloatValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFloatValueAccess().getValAssignment()); }
		(rule__FloatValue__ValAssignment)
		{ after(grammarAccess.getFloatValueAccess().getValAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringValue
entryRuleStringValue
:
{ before(grammarAccess.getStringValueRule()); }
	 ruleStringValue
{ after(grammarAccess.getStringValueRule()); } 
	 EOF 
;

// Rule StringValue
ruleStringValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringValueAccess().getValAssignment()); }
		(rule__StringValue__ValAssignment)
		{ after(grammarAccess.getStringValueAccess().getValAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntValue
entryRuleIntValue
:
{ before(grammarAccess.getIntValueRule()); }
	 ruleIntValue
{ after(grammarAccess.getIntValueRule()); } 
	 EOF 
;

// Rule IntValue
ruleIntValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntValueAccess().getValAssignment()); }
		(rule__IntValue__ValAssignment)
		{ after(grammarAccess.getIntValueAccess().getValAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNull
entryRuleNull
:
{ before(grammarAccess.getNullRule()); }
	 ruleNull
{ after(grammarAccess.getNullRule()); } 
	 EOF 
;

// Rule Null
ruleNull 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNullAccess().getValAssignment()); }
		(rule__Null__ValAssignment)
		{ after(grammarAccess.getNullAccess().getValAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanValue
entryRuleBooleanValue
:
{ before(grammarAccess.getBooleanValueRule()); }
	 ruleBooleanValue
{ after(grammarAccess.getBooleanValueRule()); } 
	 EOF 
;

// Rule BooleanValue
ruleBooleanValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanValueAccess().getValAssignment()); }
		(rule__BooleanValue__ValAssignment)
		{ after(grammarAccess.getBooleanValueAccess().getValAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReal
entryRuleReal
:
{ before(grammarAccess.getRealRule()); }
	 ruleReal
{ after(grammarAccess.getRealRule()); } 
	 EOF 
;

// Rule Real
ruleReal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRealAccess().getGroup()); }
		(rule__Real__Group__0)
		{ after(grammarAccess.getRealAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoolean
entryRuleBoolean
:
{ before(grammarAccess.getBooleanRule()); }
	 ruleBoolean
{ after(grammarAccess.getBooleanRule()); } 
	 EOF 
;

// Rule Boolean
ruleBoolean 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanAccess().getAlternatives()); }
		(rule__Boolean__Alternatives)
		{ after(grammarAccess.getBooleanAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSCHEMA_TYPE
entryRuleSCHEMA_TYPE
:
{ before(grammarAccess.getSCHEMA_TYPERule()); }
	 ruleSCHEMA_TYPE
{ after(grammarAccess.getSCHEMA_TYPERule()); } 
	 EOF 
;

// Rule SCHEMA_TYPE
ruleSCHEMA_TYPE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSCHEMA_TYPEAccess().getAlternatives()); }
		(rule__SCHEMA_TYPE__Alternatives)
		{ after(grammarAccess.getSCHEMA_TYPEAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVARIABLE_TYPE
entryRuleVARIABLE_TYPE
:
{ before(grammarAccess.getVARIABLE_TYPERule()); }
	 ruleVARIABLE_TYPE
{ after(grammarAccess.getVARIABLE_TYPERule()); } 
	 EOF 
;

// Rule VARIABLE_TYPE
ruleVARIABLE_TYPE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVARIABLE_TYPEAccess().getAlternatives()); }
		(rule__VARIABLE_TYPE__Alternatives)
		{ after(grammarAccess.getVARIABLE_TYPEAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQN
entryRuleQN
:
{ before(grammarAccess.getQNRule()); }
	 ruleQN
{ after(grammarAccess.getQNRule()); } 
	 EOF 
;

// Rule QN
ruleQN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQNAccess().getGroup()); }
		(rule__QN__Group__0)
		{ after(grammarAccess.getQNAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericRule__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGenericRuleAccess().getRenameSchemaParserRuleCall_0()); }
		ruleRenameSchema
		{ after(grammarAccess.getGenericRuleAccess().getRenameSchemaParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getGenericRuleAccess().getRemoveSchemaParserRuleCall_1()); }
		ruleRemoveSchema
		{ after(grammarAccess.getGenericRuleAccess().getRemoveSchemaParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getGenericRuleAccess().getAddParserRuleCall_2()); }
		ruleAdd
		{ after(grammarAccess.getGenericRuleAccess().getAddParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getGenericRuleAccess().getChangeSchemaParserRuleCall_3()); }
		ruleChangeSchema
		{ after(grammarAccess.getGenericRuleAccess().getChangeSchemaParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getGenericRuleAccess().getChangeEnumParserRuleCall_4()); }
		ruleChangeEnum
		{ after(grammarAccess.getGenericRuleAccess().getChangeEnumParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SchemaRule__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSchemaRuleAccess().getRemoveVariableParserRuleCall_0()); }
		ruleRemoveVariable
		{ after(grammarAccess.getSchemaRuleAccess().getRemoveVariableParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSchemaRuleAccess().getRenameVariableParserRuleCall_1()); }
		ruleRenameVariable
		{ after(grammarAccess.getSchemaRuleAccess().getRenameVariableParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getSchemaRuleAccess().getAddVariableParserRuleCall_2()); }
		ruleAddVariable
		{ after(grammarAccess.getSchemaRuleAccess().getAddVariableParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getSchemaRuleAccess().getChangeDefValueParserRuleCall_3()); }
		ruleChangeDefValue
		{ after(grammarAccess.getSchemaRuleAccess().getChangeDefValueParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getSchemaRuleAccess().getChangeTypeParserRuleCall_4()); }
		ruleChangeType
		{ after(grammarAccess.getSchemaRuleAccess().getChangeTypeParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumRule__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumRuleAccess().getRemoveEnumParserRuleCall_0()); }
		ruleRemoveEnum
		{ after(grammarAccess.getEnumRuleAccess().getRemoveEnumParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEnumRuleAccess().getRenameEnumParserRuleCall_1()); }
		ruleRenameEnum
		{ after(grammarAccess.getEnumRuleAccess().getRenameEnumParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getEnumRuleAccess().getAddEnumParserRuleCall_2()); }
		ruleAddEnum
		{ after(grammarAccess.getEnumRuleAccess().getAddEnumParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeSchema__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangeSchemaAccess().getRecordKeyword_1_0()); }
		'record'
		{ after(grammarAccess.getChangeSchemaAccess().getRecordKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getChangeSchemaAccess().getErrorKeyword_1_1()); }
		'error'
		{ after(grammarAccess.getChangeSchemaAccess().getErrorKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddAccess().getAddRecordParserRuleCall_0()); }
		ruleAddRecord
		{ after(grammarAccess.getAddAccess().getAddRecordParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAddAccess().getAddEnumerationParserRuleCall_1()); }
		ruleAddEnumeration
		{ after(grammarAccess.getAddAccess().getAddEnumerationParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getPrimitiveTypeFieldParserRuleCall_0()); }
		rulePrimitiveTypeField
		{ after(grammarAccess.getFieldAccess().getPrimitiveTypeFieldParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFieldAccess().getCustomTypeFieldParserRuleCall_1()); }
		ruleCustomTypeField
		{ after(grammarAccess.getFieldAccess().getCustomTypeFieldParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getFloatValueParserRuleCall_0()); }
		ruleFloatValue
		{ after(grammarAccess.getValueAccess().getFloatValueParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getIntValueParserRuleCall_1()); }
		ruleIntValue
		{ after(grammarAccess.getValueAccess().getIntValueParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getStringValueParserRuleCall_2()); }
		ruleStringValue
		{ after(grammarAccess.getValueAccess().getStringValueParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getBooleanValueParserRuleCall_3()); }
		ruleBooleanValue
		{ after(grammarAccess.getValueAccess().getBooleanValueParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getNullParserRuleCall_4()); }
		ruleNull
		{ after(grammarAccess.getValueAccess().getNullParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanAccess().getTrueKeyword_0()); }
		'true'
		{ after(grammarAccess.getBooleanAccess().getTrueKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanAccess().getFalseKeyword_1()); }
		'false'
		{ after(grammarAccess.getBooleanAccess().getFalseKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SCHEMA_TYPE__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSCHEMA_TYPEAccess().getRecordKeyword_0()); }
		'record'
		{ after(grammarAccess.getSCHEMA_TYPEAccess().getRecordKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getSCHEMA_TYPEAccess().getEnumKeyword_1()); }
		'enum'
		{ after(grammarAccess.getSCHEMA_TYPEAccess().getEnumKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VARIABLE_TYPE__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVARIABLE_TYPEAccess().getIntKeyword_0()); }
		'int'
		{ after(grammarAccess.getVARIABLE_TYPEAccess().getIntKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getVARIABLE_TYPEAccess().getDoubleKeyword_1()); }
		'double'
		{ after(grammarAccess.getVARIABLE_TYPEAccess().getDoubleKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getVARIABLE_TYPEAccess().getStringKeyword_2()); }
		'string'
		{ after(grammarAccess.getVARIABLE_TYPEAccess().getStringKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getVARIABLE_TYPEAccess().getLongKeyword_3()); }
		'long'
		{ after(grammarAccess.getVARIABLE_TYPEAccess().getLongKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getVARIABLE_TYPEAccess().getBooleanKeyword_4()); }
		'boolean'
		{ after(grammarAccess.getVARIABLE_TYPEAccess().getBooleanKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getVARIABLE_TYPEAccess().getFloatKeyword_5()); }
		'float'
		{ after(grammarAccess.getVARIABLE_TYPEAccess().getFloatKeyword_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getRuleDeclarationsAssignment_0()); }
	(rule__Model__RuleDeclarationsAssignment_0)*
	{ after(grammarAccess.getModelAccess().getRuleDeclarationsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getRuleMapsAssignment_1()); }
	(rule__Model__RuleMapsAssignment_1)*
	{ after(grammarAccess.getModelAccess().getRuleMapsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getFeaturesAssignment_2()); }
	(rule__Model__FeaturesAssignment_2)*
	{ after(grammarAccess.getModelAccess().getFeaturesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getFeatureMapsAssignment_3()); }
	(rule__Model__FeatureMapsAssignment_3)*
	{ after(grammarAccess.getModelAccess().getFeatureMapsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__0__Impl
	rule__Feature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getFeatureKeyword_0()); }
	'feature'
	{ after(grammarAccess.getFeatureAccess().getFeatureKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__1__Impl
	rule__Feature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getNameAssignment_1()); }
	(rule__Feature__NameAssignment_1)
	{ after(grammarAccess.getFeatureAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__2__Impl
	rule__Feature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getGroup_2()); }
	(rule__Feature__Group_2__0)?
	{ after(grammarAccess.getFeatureAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__3__Impl
	rule__Feature__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getFeatureAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__4__Impl
	rule__Feature__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getRuleMapsAssignment_4()); }
	(rule__Feature__RuleMapsAssignment_4)*
	{ after(grammarAccess.getFeatureAccess().getRuleMapsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getFeatureAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group_2__0__Impl
	rule__Feature__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getColonKeyword_2_0()); }
	':'
	{ after(grammarAccess.getFeatureAccess().getColonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getExtendAssignment_2_1()); }
	(rule__Feature__ExtendAssignment_2_1)
	{ after(grammarAccess.getFeatureAccess().getExtendAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMap__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMap__Group__0__Impl
	rule__FeatureMap__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMap__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMapAccess().getUseKeyword_0()); }
	'use'
	{ after(grammarAccess.getFeatureMapAccess().getUseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMap__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMap__Group__1__Impl
	rule__FeatureMap__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMap__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMapAccess().getNameAssignment_1()); }
	(rule__FeatureMap__NameAssignment_1)
	{ after(grammarAccess.getFeatureMapAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMap__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMap__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMap__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMapAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getFeatureMapAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleMap__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleMap__Group__0__Impl
	rule__RuleMap__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleMap__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleMapAccess().getRulesetKeyword_0()); }
	'ruleset'
	{ after(grammarAccess.getRuleMapAccess().getRulesetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleMap__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleMap__Group__1__Impl
	rule__RuleMap__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleMap__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleMapAccess().getNameAssignment_1()); }
	(rule__RuleMap__NameAssignment_1)
	{ after(grammarAccess.getRuleMapAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleMap__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleMap__Group__2__Impl
	rule__RuleMap__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleMap__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleMapAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getRuleMapAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleMap__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleMap__Group__3__Impl
	rule__RuleMap__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleMap__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleMapAccess().getRulesAssignment_3()); }
	(rule__RuleMap__RulesAssignment_3)*
	{ after(grammarAccess.getRuleMapAccess().getRulesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleMap__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleMap__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleMap__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleMapAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getRuleMapAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleDeclaration__Group__0__Impl
	rule__RuleDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleDeclarationAccess().getRuleKeyword_0()); }
	'rule'
	{ after(grammarAccess.getRuleDeclarationAccess().getRuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleDeclaration__Group__1__Impl
	rule__RuleDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleDeclarationAccess().getNameAssignment_1()); }
	(rule__RuleDeclaration__NameAssignment_1)
	{ after(grammarAccess.getRuleDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleDeclaration__Group__2__Impl
	rule__RuleDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleDeclarationAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getRuleDeclarationAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleDeclaration__Group__3__Impl
	rule__RuleDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleDeclarationAccess().getRulesAssignment_3()); }
	(rule__RuleDeclaration__RulesAssignment_3)*
	{ after(grammarAccess.getRuleDeclarationAccess().getRulesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleDeclarationAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getRuleDeclarationAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChangeSchema__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeSchema__Group__0__Impl
	rule__ChangeSchema__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeSchema__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeSchemaAccess().getChangeKeyword_0()); }
	'change'
	{ after(grammarAccess.getChangeSchemaAccess().getChangeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeSchema__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeSchema__Group__1__Impl
	rule__ChangeSchema__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeSchema__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeSchemaAccess().getAlternatives_1()); }
	(rule__ChangeSchema__Alternatives_1)
	{ after(grammarAccess.getChangeSchemaAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeSchema__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeSchema__Group__2__Impl
	rule__ChangeSchema__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeSchema__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeSchemaAccess().getSchemaAssignment_2()); }
	(rule__ChangeSchema__SchemaAssignment_2)
	{ after(grammarAccess.getChangeSchemaAccess().getSchemaAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeSchema__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeSchema__Group__3__Impl
	rule__ChangeSchema__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeSchema__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeSchemaAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getChangeSchemaAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeSchema__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeSchema__Group__4__Impl
	rule__ChangeSchema__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeSchema__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeSchemaAccess().getRulesAssignment_4()); }
	(rule__ChangeSchema__RulesAssignment_4)*
	{ after(grammarAccess.getChangeSchemaAccess().getRulesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeSchema__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeSchema__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeSchema__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeSchemaAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getChangeSchemaAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChangeEnum__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeEnum__Group__0__Impl
	rule__ChangeEnum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeEnum__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeEnumAccess().getChangeKeyword_0()); }
	'change'
	{ after(grammarAccess.getChangeEnumAccess().getChangeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeEnum__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeEnum__Group__1__Impl
	rule__ChangeEnum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeEnum__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeEnumAccess().getEnumKeyword_1()); }
	'enum'
	{ after(grammarAccess.getChangeEnumAccess().getEnumKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeEnum__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeEnum__Group__2__Impl
	rule__ChangeEnum__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeEnum__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeEnumAccess().getSchemaAssignment_2()); }
	(rule__ChangeEnum__SchemaAssignment_2)
	{ after(grammarAccess.getChangeEnumAccess().getSchemaAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeEnum__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeEnum__Group__3__Impl
	rule__ChangeEnum__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeEnum__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeEnumAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getChangeEnumAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeEnum__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeEnum__Group__4__Impl
	rule__ChangeEnum__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeEnum__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeEnumAccess().getRulesAssignment_4()); }
	(rule__ChangeEnum__RulesAssignment_4)*
	{ after(grammarAccess.getChangeEnumAccess().getRulesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeEnum__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeEnum__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeEnum__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeEnumAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getChangeEnumAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddRecord__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddRecord__Group__0__Impl
	rule__AddRecord__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddRecord__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddRecordAccess().getAddAtKeyword_0()); }
	'add.at'
	{ after(grammarAccess.getAddRecordAccess().getAddAtKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddRecord__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddRecord__Group__1__Impl
	rule__AddRecord__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddRecord__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddRecordAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAddRecordAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddRecord__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddRecord__Group__2__Impl
	rule__AddRecord__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AddRecord__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddRecordAccess().getIndexAssignment_2()); }
	(rule__AddRecord__IndexAssignment_2)
	{ after(grammarAccess.getAddRecordAccess().getIndexAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddRecord__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddRecord__Group__3__Impl
	rule__AddRecord__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AddRecord__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddRecordAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getAddRecordAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddRecord__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddRecord__Group__4__Impl
	rule__AddRecord__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AddRecord__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddRecordAccess().getRecordKeyword_4()); }
	'record'
	{ after(grammarAccess.getAddRecordAccess().getRecordKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddRecord__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddRecord__Group__5__Impl
	rule__AddRecord__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AddRecord__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddRecordAccess().getNamespaceAssignment_5()); }
	(rule__AddRecord__NamespaceAssignment_5)
	{ after(grammarAccess.getAddRecordAccess().getNamespaceAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddRecord__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddRecord__Group__6__Impl
	rule__AddRecord__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AddRecord__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddRecordAccess().getFullStopKeyword_6()); }
	'.'
	{ after(grammarAccess.getAddRecordAccess().getFullStopKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddRecord__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddRecord__Group__7__Impl
	rule__AddRecord__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__AddRecord__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddRecordAccess().getRecordNameAssignment_7()); }
	(rule__AddRecord__RecordNameAssignment_7)
	{ after(grammarAccess.getAddRecordAccess().getRecordNameAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddRecord__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddRecord__Group__8__Impl
	rule__AddRecord__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__AddRecord__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddRecordAccess().getLeftCurlyBracketKeyword_8()); }
	'{'
	{ after(grammarAccess.getAddRecordAccess().getLeftCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddRecord__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddRecord__Group__9__Impl
	rule__AddRecord__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__AddRecord__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddRecordAccess().getFieldsAssignment_9()); }
	(rule__AddRecord__FieldsAssignment_9)*
	{ after(grammarAccess.getAddRecordAccess().getFieldsAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddRecord__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddRecord__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddRecord__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddRecordAccess().getRightCurlyBracketKeyword_10()); }
	'}'
	{ after(grammarAccess.getAddRecordAccess().getRightCurlyBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddEnumeration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddEnumeration__Group__0__Impl
	rule__AddEnumeration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnumeration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddEnumerationAccess().getAddAtKeyword_0()); }
	'add.at'
	{ after(grammarAccess.getAddEnumerationAccess().getAddAtKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnumeration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddEnumeration__Group__1__Impl
	rule__AddEnumeration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnumeration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddEnumerationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAddEnumerationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnumeration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddEnumeration__Group__2__Impl
	rule__AddEnumeration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnumeration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddEnumerationAccess().getIndexAssignment_2()); }
	(rule__AddEnumeration__IndexAssignment_2)
	{ after(grammarAccess.getAddEnumerationAccess().getIndexAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnumeration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddEnumeration__Group__3__Impl
	rule__AddEnumeration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnumeration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddEnumerationAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getAddEnumerationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnumeration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddEnumeration__Group__4__Impl
	rule__AddEnumeration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnumeration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddEnumerationAccess().getEnumKeyword_4()); }
	'enum'
	{ after(grammarAccess.getAddEnumerationAccess().getEnumKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnumeration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddEnumeration__Group__5__Impl
	rule__AddEnumeration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnumeration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddEnumerationAccess().getNamespaceAssignment_5()); }
	(rule__AddEnumeration__NamespaceAssignment_5)
	{ after(grammarAccess.getAddEnumerationAccess().getNamespaceAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnumeration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddEnumeration__Group__6__Impl
	rule__AddEnumeration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnumeration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddEnumerationAccess().getFullStopKeyword_6()); }
	'.'
	{ after(grammarAccess.getAddEnumerationAccess().getFullStopKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnumeration__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddEnumeration__Group__7__Impl
	rule__AddEnumeration__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnumeration__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddEnumerationAccess().getEnumNameAssignment_7()); }
	(rule__AddEnumeration__EnumNameAssignment_7)
	{ after(grammarAccess.getAddEnumerationAccess().getEnumNameAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnumeration__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddEnumeration__Group__8__Impl
	rule__AddEnumeration__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnumeration__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddEnumerationAccess().getLeftCurlyBracketKeyword_8()); }
	'{'
	{ after(grammarAccess.getAddEnumerationAccess().getLeftCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnumeration__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddEnumeration__Group__9__Impl
	rule__AddEnumeration__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnumeration__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddEnumerationAccess().getSymbolsAssignment_9()); }
	(rule__AddEnumeration__SymbolsAssignment_9)
	{ after(grammarAccess.getAddEnumerationAccess().getSymbolsAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnumeration__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddEnumeration__Group__10__Impl
	rule__AddEnumeration__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnumeration__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddEnumerationAccess().getGroup_10()); }
	(rule__AddEnumeration__Group_10__0)*
	{ after(grammarAccess.getAddEnumerationAccess().getGroup_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnumeration__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddEnumeration__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnumeration__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddEnumerationAccess().getRightCurlyBracketKeyword_11()); }
	'}'
	{ after(grammarAccess.getAddEnumerationAccess().getRightCurlyBracketKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddEnumeration__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddEnumeration__Group_10__0__Impl
	rule__AddEnumeration__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnumeration__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddEnumerationAccess().getCommaKeyword_10_0()); }
	','
	{ after(grammarAccess.getAddEnumerationAccess().getCommaKeyword_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnumeration__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddEnumeration__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnumeration__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddEnumerationAccess().getSymbolsAssignment_10_1()); }
	(rule__AddEnumeration__SymbolsAssignment_10_1)
	{ after(grammarAccess.getAddEnumerationAccess().getSymbolsAssignment_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddVariable__Group__0__Impl
	rule__AddVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddVariableAccess().getAddAtKeyword_0()); }
	'add.at'
	{ after(grammarAccess.getAddVariableAccess().getAddAtKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddVariable__Group__1__Impl
	rule__AddVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddVariableAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAddVariableAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddVariable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddVariable__Group__2__Impl
	rule__AddVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AddVariable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddVariableAccess().getIndexAssignment_2()); }
	(rule__AddVariable__IndexAssignment_2)
	{ after(grammarAccess.getAddVariableAccess().getIndexAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddVariable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddVariable__Group__3__Impl
	rule__AddVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AddVariable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddVariableAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getAddVariableAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddVariable__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddVariable__Group__4__Impl
	rule__AddVariable__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AddVariable__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddVariableAccess().getNewVarAssignment_4()); }
	(rule__AddVariable__NewVarAssignment_4)
	{ after(grammarAccess.getAddVariableAccess().getNewVarAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddVariable__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddVariable__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddVariable__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddVariableAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getAddVariableAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddEnum__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddEnum__Group__0__Impl
	rule__AddEnum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnum__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddEnumAccess().getAddAtKeyword_0()); }
	'add.at'
	{ after(grammarAccess.getAddEnumAccess().getAddAtKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnum__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddEnum__Group__1__Impl
	rule__AddEnum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnum__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddEnumAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAddEnumAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnum__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddEnum__Group__2__Impl
	rule__AddEnum__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnum__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddEnumAccess().getIndexAssignment_2()); }
	(rule__AddEnum__IndexAssignment_2)
	{ after(grammarAccess.getAddEnumAccess().getIndexAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnum__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddEnum__Group__3__Impl
	rule__AddEnum__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnum__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddEnumAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getAddEnumAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnum__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddEnum__Group__4__Impl
	rule__AddEnum__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnum__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddEnumAccess().getVarNameAssignment_4()); }
	(rule__AddEnum__VarNameAssignment_4)
	{ after(grammarAccess.getAddEnumAccess().getVarNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnum__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddEnum__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnum__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddEnumAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getAddEnumAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RemoveSchema__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RemoveSchema__Group__0__Impl
	rule__RemoveSchema__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveSchema__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveSchemaAccess().getRemoveKeyword_0()); }
	'remove'
	{ after(grammarAccess.getRemoveSchemaAccess().getRemoveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveSchema__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RemoveSchema__Group__1__Impl
	rule__RemoveSchema__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveSchema__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveSchemaAccess().getSchemaTypeAssignment_1()); }
	(rule__RemoveSchema__SchemaTypeAssignment_1)
	{ after(grammarAccess.getRemoveSchemaAccess().getSchemaTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveSchema__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RemoveSchema__Group__2__Impl
	rule__RemoveSchema__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveSchema__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveSchemaAccess().getSchemaAssignment_2()); }
	(rule__RemoveSchema__SchemaAssignment_2)
	{ after(grammarAccess.getRemoveSchemaAccess().getSchemaAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveSchema__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RemoveSchema__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveSchema__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveSchemaAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getRemoveSchemaAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RemoveVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RemoveVariable__Group__0__Impl
	rule__RemoveVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveVariableAccess().getRemoveKeyword_0()); }
	'remove'
	{ after(grammarAccess.getRemoveVariableAccess().getRemoveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RemoveVariable__Group__1__Impl
	rule__RemoveVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveVariableAccess().getVariableAssignment_1()); }
	(rule__RemoveVariable__VariableAssignment_1)
	{ after(grammarAccess.getRemoveVariableAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveVariable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RemoveVariable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveVariable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveVariableAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getRemoveVariableAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RemoveEnum__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RemoveEnum__Group__0__Impl
	rule__RemoveEnum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveEnum__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveEnumAccess().getRemoveKeyword_0()); }
	'remove'
	{ after(grammarAccess.getRemoveEnumAccess().getRemoveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveEnum__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RemoveEnum__Group__1__Impl
	rule__RemoveEnum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveEnum__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveEnumAccess().getVarNameAssignment_1()); }
	(rule__RemoveEnum__VarNameAssignment_1)
	{ after(grammarAccess.getRemoveEnumAccess().getVarNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveEnum__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RemoveEnum__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveEnum__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveEnumAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getRemoveEnumAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RenameSchema__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameSchema__Group__0__Impl
	rule__RenameSchema__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameSchema__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameSchemaAccess().getRenameKeyword_0()); }
	'rename'
	{ after(grammarAccess.getRenameSchemaAccess().getRenameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameSchema__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameSchema__Group__1__Impl
	rule__RenameSchema__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameSchema__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameSchemaAccess().getSchemaTypeAssignment_1()); }
	(rule__RenameSchema__SchemaTypeAssignment_1)
	{ after(grammarAccess.getRenameSchemaAccess().getSchemaTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameSchema__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameSchema__Group__2__Impl
	rule__RenameSchema__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameSchema__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameSchemaAccess().getSchemaAssignment_2()); }
	(rule__RenameSchema__SchemaAssignment_2)
	{ after(grammarAccess.getRenameSchemaAccess().getSchemaAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameSchema__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameSchema__Group__3__Impl
	rule__RenameSchema__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameSchema__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameSchemaAccess().getEqualsSignGreaterThanSignKeyword_3()); }
	'=>'
	{ after(grammarAccess.getRenameSchemaAccess().getEqualsSignGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameSchema__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameSchema__Group__4__Impl
	rule__RenameSchema__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameSchema__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameSchemaAccess().getNewSchNameAssignment_4()); }
	(rule__RenameSchema__NewSchNameAssignment_4)
	{ after(grammarAccess.getRenameSchemaAccess().getNewSchNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameSchema__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameSchema__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameSchema__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameSchemaAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getRenameSchemaAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RenameVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameVariable__Group__0__Impl
	rule__RenameVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameVariableAccess().getRenameKeyword_0()); }
	'rename'
	{ after(grammarAccess.getRenameVariableAccess().getRenameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameVariable__Group__1__Impl
	rule__RenameVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameVariableAccess().getVariableAssignment_1()); }
	(rule__RenameVariable__VariableAssignment_1)
	{ after(grammarAccess.getRenameVariableAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameVariable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameVariable__Group__2__Impl
	rule__RenameVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameVariable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameVariableAccess().getEqualsSignGreaterThanSignKeyword_2()); }
	'=>'
	{ after(grammarAccess.getRenameVariableAccess().getEqualsSignGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameVariable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameVariable__Group__3__Impl
	rule__RenameVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameVariable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameVariableAccess().getNewVarNameAssignment_3()); }
	(rule__RenameVariable__NewVarNameAssignment_3)
	{ after(grammarAccess.getRenameVariableAccess().getNewVarNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameVariable__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameVariable__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameVariable__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameVariableAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getRenameVariableAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RenameEnum__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameEnum__Group__0__Impl
	rule__RenameEnum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameEnum__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameEnumAccess().getRenameKeyword_0()); }
	'rename'
	{ after(grammarAccess.getRenameEnumAccess().getRenameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameEnum__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameEnum__Group__1__Impl
	rule__RenameEnum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameEnum__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameEnumAccess().getOldNameAssignment_1()); }
	(rule__RenameEnum__OldNameAssignment_1)
	{ after(grammarAccess.getRenameEnumAccess().getOldNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameEnum__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameEnum__Group__2__Impl
	rule__RenameEnum__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameEnum__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameEnumAccess().getEqualsSignGreaterThanSignKeyword_2()); }
	'=>'
	{ after(grammarAccess.getRenameEnumAccess().getEqualsSignGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameEnum__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameEnum__Group__3__Impl
	rule__RenameEnum__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameEnum__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameEnumAccess().getNewEnumNameAssignment_3()); }
	(rule__RenameEnum__NewEnumNameAssignment_3)
	{ after(grammarAccess.getRenameEnumAccess().getNewEnumNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameEnum__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameEnum__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameEnum__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameEnumAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getRenameEnumAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChangeDefValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeDefValue__Group__0__Impl
	rule__ChangeDefValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeDefValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeDefValueAccess().getSet_valKeyword_0()); }
	'set_val'
	{ after(grammarAccess.getChangeDefValueAccess().getSet_valKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeDefValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeDefValue__Group__1__Impl
	rule__ChangeDefValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeDefValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeDefValueAccess().getFieldAssignment_1()); }
	(rule__ChangeDefValue__FieldAssignment_1)
	{ after(grammarAccess.getChangeDefValueAccess().getFieldAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeDefValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeDefValue__Group__2__Impl
	rule__ChangeDefValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeDefValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeDefValueAccess().getEqualsSignGreaterThanSignKeyword_2()); }
	'=>'
	{ after(grammarAccess.getChangeDefValueAccess().getEqualsSignGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeDefValue__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeDefValue__Group__3__Impl
	rule__ChangeDefValue__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeDefValue__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeDefValueAccess().getNewValAssignment_3()); }
	(rule__ChangeDefValue__NewValAssignment_3)
	{ after(grammarAccess.getChangeDefValueAccess().getNewValAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeDefValue__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeDefValue__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeDefValue__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeDefValueAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getChangeDefValueAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChangeType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeType__Group__0__Impl
	rule__ChangeType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeTypeAccess().getSet_typeKeyword_0()); }
	'set_type'
	{ after(grammarAccess.getChangeTypeAccess().getSet_typeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeType__Group__1__Impl
	rule__ChangeType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeTypeAccess().getFieldAssignment_1()); }
	(rule__ChangeType__FieldAssignment_1)
	{ after(grammarAccess.getChangeTypeAccess().getFieldAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeType__Group__2__Impl
	rule__ChangeType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeTypeAccess().getEqualsSignGreaterThanSignKeyword_2()); }
	'=>'
	{ after(grammarAccess.getChangeTypeAccess().getEqualsSignGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeType__Group__3__Impl
	rule__ChangeType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeTypeAccess().getNewTypeAssignment_3()); }
	(rule__ChangeType__NewTypeAssignment_3)
	{ after(grammarAccess.getChangeTypeAccess().getNewTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeTypeAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getChangeTypeAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CustomTypeField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CustomTypeField__Group__0__Impl
	rule__CustomTypeField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomTypeField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCustomTypeFieldAccess().getTypeAssignment_0()); }
	(rule__CustomTypeField__TypeAssignment_0)
	{ after(grammarAccess.getCustomTypeFieldAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomTypeField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CustomTypeField__Group__1__Impl
	rule__CustomTypeField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomTypeField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCustomTypeFieldAccess().getVarNameAssignment_1()); }
	(rule__CustomTypeField__VarNameAssignment_1)
	{ after(grammarAccess.getCustomTypeFieldAccess().getVarNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomTypeField__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CustomTypeField__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomTypeField__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCustomTypeFieldAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getCustomTypeFieldAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveTypeField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveTypeField__Group__0__Impl
	rule__PrimitiveTypeField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeFieldAccess().getTypeAssignment_0()); }
	(rule__PrimitiveTypeField__TypeAssignment_0)
	{ after(grammarAccess.getPrimitiveTypeFieldAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveTypeField__Group__1__Impl
	rule__PrimitiveTypeField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeFieldAccess().getVarNameAssignment_1()); }
	(rule__PrimitiveTypeField__VarNameAssignment_1)
	{ after(grammarAccess.getPrimitiveTypeFieldAccess().getVarNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeField__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveTypeField__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeField__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeFieldAccess().getGroup_2()); }
	(rule__PrimitiveTypeField__Group_2__0)?
	{ after(grammarAccess.getPrimitiveTypeFieldAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveTypeField__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveTypeField__Group_2__0__Impl
	rule__PrimitiveTypeField__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeField__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeFieldAccess().getEqualsSignKeyword_2_0()); }
	'='
	{ after(grammarAccess.getPrimitiveTypeFieldAccess().getEqualsSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeField__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveTypeField__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeField__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeFieldAccess().getValueAssignment_2_1()); }
	(rule__PrimitiveTypeField__ValueAssignment_2_1)
	{ after(grammarAccess.getPrimitiveTypeFieldAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Real__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Real__Group__0__Impl
	rule__Real__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Real__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRealAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getRealAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Real__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Real__Group__1__Impl
	rule__Real__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Real__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRealAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getRealAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Real__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Real__Group__2__Impl
	rule__Real__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Real__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRealAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getRealAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Real__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Real__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Real__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRealAccess().getINTTerminalRuleCall_3()); }
	RULE_INT
	{ after(grammarAccess.getRealAccess().getINTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QN__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QN__Group__0__Impl
	rule__QN__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QN__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQNAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQNAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QN__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QN__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QN__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQNAccess().getGroup_1()); }
	(rule__QN__Group_1__0)*
	{ after(grammarAccess.getQNAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QN__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QN__Group_1__0__Impl
	rule__QN__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QN__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQNAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQNAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QN__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QN__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QN__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQNAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQNAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__RuleDeclarationsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getRuleDeclarationsRuleDeclarationParserRuleCall_0_0()); }
		ruleRuleDeclaration
		{ after(grammarAccess.getModelAccess().getRuleDeclarationsRuleDeclarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__RuleMapsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getRuleMapsRuleMapParserRuleCall_1_0()); }
		ruleRuleMap
		{ after(grammarAccess.getModelAccess().getRuleMapsRuleMapParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__FeaturesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getFeaturesFeatureParserRuleCall_2_0()); }
		ruleFeature
		{ after(grammarAccess.getModelAccess().getFeaturesFeatureParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__FeatureMapsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getFeatureMapsFeatureMapParserRuleCall_3_0()); }
		ruleFeatureMap
		{ after(grammarAccess.getModelAccess().getFeatureMapsFeatureMapParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFeatureAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__ExtendAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getExtendFeatureCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getFeatureAccess().getExtendFeatureIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFeatureAccess().getExtendFeatureIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getFeatureAccess().getExtendFeatureCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__RuleMapsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getRuleMapsRuleMapCrossReference_4_0()); }
		(
			{ before(grammarAccess.getFeatureAccess().getRuleMapsRuleMapIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFeatureAccess().getRuleMapsRuleMapIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getFeatureAccess().getRuleMapsRuleMapCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMap__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMapAccess().getNameFeatureCrossReference_1_0()); }
		(
			{ before(grammarAccess.getFeatureMapAccess().getNameFeatureIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFeatureMapAccess().getNameFeatureIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getFeatureMapAccess().getNameFeatureCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleMap__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleMapAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRuleMapAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleMap__RulesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleMapAccess().getRulesRuleDeclarationCrossReference_3_0()); }
		(
			{ before(grammarAccess.getRuleMapAccess().getRulesRuleDeclarationIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRuleMapAccess().getRulesRuleDeclarationIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getRuleMapAccess().getRulesRuleDeclarationCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRuleDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__RulesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleDeclarationAccess().getRulesGenericRuleParserRuleCall_3_0()); }
		ruleGenericRule
		{ after(grammarAccess.getRuleDeclarationAccess().getRulesGenericRuleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeSchema__SchemaAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangeSchemaAccess().getSchemaTypeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getChangeSchemaAccess().getSchemaTypeQNParserRuleCall_2_0_1()); }
			ruleQN
			{ after(grammarAccess.getChangeSchemaAccess().getSchemaTypeQNParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getChangeSchemaAccess().getSchemaTypeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeSchema__RulesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangeSchemaAccess().getRulesSchemaRuleParserRuleCall_4_0()); }
		ruleSchemaRule
		{ after(grammarAccess.getChangeSchemaAccess().getRulesSchemaRuleParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeEnum__SchemaAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangeEnumAccess().getSchemaEnumTypeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getChangeEnumAccess().getSchemaEnumTypeQNParserRuleCall_2_0_1()); }
			ruleQN
			{ after(grammarAccess.getChangeEnumAccess().getSchemaEnumTypeQNParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getChangeEnumAccess().getSchemaEnumTypeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeEnum__RulesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangeEnumAccess().getRulesEnumRuleParserRuleCall_4_0()); }
		ruleEnumRule
		{ after(grammarAccess.getChangeEnumAccess().getRulesEnumRuleParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddRecord__IndexAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddRecordAccess().getIndexINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getAddRecordAccess().getIndexINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddRecord__NamespaceAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddRecordAccess().getNamespaceAvroIDLFileCrossReference_5_0()); }
		(
			{ before(grammarAccess.getAddRecordAccess().getNamespaceAvroIDLFileIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAddRecordAccess().getNamespaceAvroIDLFileIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getAddRecordAccess().getNamespaceAvroIDLFileCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddRecord__RecordNameAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddRecordAccess().getRecordNameIDTerminalRuleCall_7_0()); }
		RULE_ID
		{ after(grammarAccess.getAddRecordAccess().getRecordNameIDTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddRecord__FieldsAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddRecordAccess().getFieldsFieldParserRuleCall_9_0()); }
		ruleField
		{ after(grammarAccess.getAddRecordAccess().getFieldsFieldParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnumeration__IndexAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddEnumerationAccess().getIndexINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getAddEnumerationAccess().getIndexINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnumeration__NamespaceAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddEnumerationAccess().getNamespaceAvroIDLFileCrossReference_5_0()); }
		(
			{ before(grammarAccess.getAddEnumerationAccess().getNamespaceAvroIDLFileIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAddEnumerationAccess().getNamespaceAvroIDLFileIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getAddEnumerationAccess().getNamespaceAvroIDLFileCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnumeration__EnumNameAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddEnumerationAccess().getEnumNameIDTerminalRuleCall_7_0()); }
		RULE_ID
		{ after(grammarAccess.getAddEnumerationAccess().getEnumNameIDTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnumeration__SymbolsAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddEnumerationAccess().getSymbolsIDTerminalRuleCall_9_0()); }
		RULE_ID
		{ after(grammarAccess.getAddEnumerationAccess().getSymbolsIDTerminalRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnumeration__SymbolsAssignment_10_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddEnumerationAccess().getSymbolsIDTerminalRuleCall_10_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAddEnumerationAccess().getSymbolsIDTerminalRuleCall_10_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddVariable__IndexAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddVariableAccess().getIndexINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getAddVariableAccess().getIndexINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddVariable__NewVarAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddVariableAccess().getNewVarFieldParserRuleCall_4_0()); }
		ruleField
		{ after(grammarAccess.getAddVariableAccess().getNewVarFieldParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnum__IndexAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddEnumAccess().getIndexINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getAddEnumAccess().getIndexINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddEnum__VarNameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddEnumAccess().getVarNameIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getAddEnumAccess().getVarNameIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveSchema__SchemaTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRemoveSchemaAccess().getSchemaTypeSCHEMA_TYPEParserRuleCall_1_0()); }
		ruleSCHEMA_TYPE
		{ after(grammarAccess.getRemoveSchemaAccess().getSchemaTypeSCHEMA_TYPEParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveSchema__SchemaAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRemoveSchemaAccess().getSchemaTypeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getRemoveSchemaAccess().getSchemaTypeQNParserRuleCall_2_0_1()); }
			ruleQN
			{ after(grammarAccess.getRemoveSchemaAccess().getSchemaTypeQNParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getRemoveSchemaAccess().getSchemaTypeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveVariable__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRemoveVariableAccess().getVariableFieldCrossReference_1_0()); }
		(
			{ before(grammarAccess.getRemoveVariableAccess().getVariableFieldQNParserRuleCall_1_0_1()); }
			ruleQN
			{ after(grammarAccess.getRemoveVariableAccess().getVariableFieldQNParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getRemoveVariableAccess().getVariableFieldCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveEnum__VarNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRemoveEnumAccess().getVarNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRemoveEnumAccess().getVarNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameSchema__SchemaTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRenameSchemaAccess().getSchemaTypeSCHEMA_TYPEParserRuleCall_1_0()); }
		ruleSCHEMA_TYPE
		{ after(grammarAccess.getRenameSchemaAccess().getSchemaTypeSCHEMA_TYPEParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameSchema__SchemaAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRenameSchemaAccess().getSchemaTypeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getRenameSchemaAccess().getSchemaTypeQNParserRuleCall_2_0_1()); }
			ruleQN
			{ after(grammarAccess.getRenameSchemaAccess().getSchemaTypeQNParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getRenameSchemaAccess().getSchemaTypeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameSchema__NewSchNameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRenameSchemaAccess().getNewSchNameIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getRenameSchemaAccess().getNewSchNameIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameVariable__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRenameVariableAccess().getVariableFieldCrossReference_1_0()); }
		(
			{ before(grammarAccess.getRenameVariableAccess().getVariableFieldQNParserRuleCall_1_0_1()); }
			ruleQN
			{ after(grammarAccess.getRenameVariableAccess().getVariableFieldQNParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getRenameVariableAccess().getVariableFieldCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameVariable__NewVarNameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRenameVariableAccess().getNewVarNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getRenameVariableAccess().getNewVarNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameEnum__OldNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRenameEnumAccess().getOldNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRenameEnumAccess().getOldNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameEnum__NewEnumNameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRenameEnumAccess().getNewEnumNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getRenameEnumAccess().getNewEnumNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeDefValue__FieldAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangeDefValueAccess().getFieldFieldCrossReference_1_0()); }
		(
			{ before(grammarAccess.getChangeDefValueAccess().getFieldFieldQNParserRuleCall_1_0_1()); }
			ruleQN
			{ after(grammarAccess.getChangeDefValueAccess().getFieldFieldQNParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getChangeDefValueAccess().getFieldFieldCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeDefValue__NewValAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangeDefValueAccess().getNewValValueParserRuleCall_3_0()); }
		ruleValue
		{ after(grammarAccess.getChangeDefValueAccess().getNewValValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeType__FieldAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangeTypeAccess().getFieldFieldCrossReference_1_0()); }
		(
			{ before(grammarAccess.getChangeTypeAccess().getFieldFieldQNParserRuleCall_1_0_1()); }
			ruleQN
			{ after(grammarAccess.getChangeTypeAccess().getFieldFieldQNParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getChangeTypeAccess().getFieldFieldCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeType__NewTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangeTypeAccess().getNewTypeVARIABLE_TYPEParserRuleCall_3_0()); }
		ruleVARIABLE_TYPE
		{ after(grammarAccess.getChangeTypeAccess().getNewTypeVARIABLE_TYPEParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomTypeField__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCustomTypeFieldAccess().getTypeTypeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getCustomTypeFieldAccess().getTypeTypeQNParserRuleCall_0_0_1()); }
			ruleQN
			{ after(grammarAccess.getCustomTypeFieldAccess().getTypeTypeQNParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getCustomTypeFieldAccess().getTypeTypeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomTypeField__VarNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCustomTypeFieldAccess().getVarNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCustomTypeFieldAccess().getVarNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeField__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeFieldAccess().getTypeVARIABLE_TYPEParserRuleCall_0_0()); }
		ruleVARIABLE_TYPE
		{ after(grammarAccess.getPrimitiveTypeFieldAccess().getTypeVARIABLE_TYPEParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeField__VarNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeFieldAccess().getVarNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPrimitiveTypeFieldAccess().getVarNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeField__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeFieldAccess().getValueValueParserRuleCall_2_1_0()); }
		ruleValue
		{ after(grammarAccess.getPrimitiveTypeFieldAccess().getValueValueParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatValue__ValAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloatValueAccess().getValRealParserRuleCall_0()); }
		ruleReal
		{ after(grammarAccess.getFloatValueAccess().getValRealParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__ValAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringValueAccess().getValIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getStringValueAccess().getValIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntValue__ValAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntValueAccess().getValINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getIntValueAccess().getValINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Null__ValAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNullAccess().getValNullKeyword_0()); }
		(
			{ before(grammarAccess.getNullAccess().getValNullKeyword_0()); }
			'null'
			{ after(grammarAccess.getNullAccess().getValNullKeyword_0()); }
		)
		{ after(grammarAccess.getNullAccess().getValNullKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__ValAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanValueAccess().getValBooleanParserRuleCall_0()); }
		ruleBoolean
		{ after(grammarAccess.getBooleanValueAccess().getValBooleanParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
