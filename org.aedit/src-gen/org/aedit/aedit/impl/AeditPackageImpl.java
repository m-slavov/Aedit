/**
 * generated by Xtext 2.21.0
 */
package org.aedit.aedit.impl;

import avroclipse.avroIDL.AvroIDLPackage;

import org.aedit.aedit.Add;
import org.aedit.aedit.AddAnnotationToField;
import org.aedit.aedit.AddAnnotationToSchema;
import org.aedit.aedit.AddEnum;
import org.aedit.aedit.AddEnumeration;
import org.aedit.aedit.AddError;
import org.aedit.aedit.AddNameAnnotationToField;
import org.aedit.aedit.AddRecord;
import org.aedit.aedit.AddValueToArray;
import org.aedit.aedit.AddVariable;
import org.aedit.aedit.AeditFactory;
import org.aedit.aedit.AeditPackage;
import org.aedit.aedit.AnnotatedTypes;
import org.aedit.aedit.Annotation;
import org.aedit.aedit.Array;
import org.aedit.aedit.ArrayEditRules;
import org.aedit.aedit.ArrayTypeField;
import org.aedit.aedit.BooleanValue;
import org.aedit.aedit.ChangeDefValue;
import org.aedit.aedit.ChangeEnum;
import org.aedit.aedit.ChangeSchema;
import org.aedit.aedit.ChangeType;
import org.aedit.aedit.ComplexTypeField;
import org.aedit.aedit.CustomType;
import org.aedit.aedit.CustomTypeField;
import org.aedit.aedit.EnumRule;
import org.aedit.aedit.Feature;
import org.aedit.aedit.FeatureMap;
import org.aedit.aedit.Field;
import org.aedit.aedit.FloatValue;
import org.aedit.aedit.GenericRule;
import org.aedit.aedit.IntValue;
import org.aedit.aedit.Model;
import org.aedit.aedit.Null;
import org.aedit.aedit.PrimitiveType;
import org.aedit.aedit.PrimitiveTypeField;
import org.aedit.aedit.RemoveAnnotationFromField;
import org.aedit.aedit.RemoveAnnotationFromSchema;
import org.aedit.aedit.RemoveArrayValue;
import org.aedit.aedit.RemoveArrayValueAtIndex;
import org.aedit.aedit.RemoveEnum;
import org.aedit.aedit.RemoveNameAnnotationFromField;
import org.aedit.aedit.RemoveSchema;
import org.aedit.aedit.RemoveVariable;
import org.aedit.aedit.RenameEnum;
import org.aedit.aedit.RenameSchema;
import org.aedit.aedit.RenameVariable;
import org.aedit.aedit.RuleDeclaration;
import org.aedit.aedit.RuleMap;
import org.aedit.aedit.SchemaRule;
import org.aedit.aedit.StringValue;
import org.aedit.aedit.Types;
import org.aedit.aedit.Value;
import org.aedit.aedit.Values;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class AeditPackageImpl extends EPackageImpl implements AeditPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass featureEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass featureMapEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ruleMapEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ruleDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass genericRuleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass schemaRuleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass arrayEditRulesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enumRuleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass addAnnotationToSchemaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass addAnnotationToFieldEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass addNameAnnotationToFieldEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass removeAnnotationFromSchemaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass removeAnnotationFromFieldEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass removeNameAnnotationFromFieldEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass changeSchemaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass changeEnumEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass addEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass addRecordEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass addErrorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass addEnumerationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass addVariableEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass addEnumEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass removeSchemaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass removeVariableEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass removeEnumEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass renameSchemaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass renameVariableEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass renameEnumEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass changeDefValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass changeTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass removeArrayValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass removeArrayValueAtIndexEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass addValueToArrayEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fieldEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass customTypeFieldEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass primitiveTypeFieldEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass complexTypeFieldEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass arrayTypeFieldEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass annotatedTypesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass typesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass customTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass primitiveTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass annotationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass valuesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass arrayEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass valueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass floatValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass stringValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass intValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass nullEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass booleanValueEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.aedit.aedit.AeditPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private AeditPackageImpl()
  {
    super(eNS_URI, AeditFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link AeditPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static AeditPackage init()
  {
    if (isInited) return (AeditPackage)EPackage.Registry.INSTANCE.getEPackage(AeditPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredAeditPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    AeditPackageImpl theAeditPackage = registeredAeditPackage instanceof AeditPackageImpl ? (AeditPackageImpl)registeredAeditPackage : new AeditPackageImpl();

    isInited = true;

    // Initialize simple dependencies
    AvroIDLPackage.eINSTANCE.eClass();

    // Create package meta-data objects
    theAeditPackage.createPackageContents();

    // Initialize created meta-data
    theAeditPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theAeditPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(AeditPackage.eNS_URI, theAeditPackage);
    return theAeditPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getModel()
  {
    return modelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModel_RuleDeclarations()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModel_RuleMaps()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModel_Features()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModel_FeatureMaps()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFeature()
  {
    return featureEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFeature_Name()
  {
    return (EAttribute)featureEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFeature_Extend()
  {
    return (EReference)featureEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFeature_RuleMaps()
  {
    return (EReference)featureEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFeatureMap()
  {
    return featureMapEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFeatureMap_Name()
  {
    return (EReference)featureMapEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRuleMap()
  {
    return ruleMapEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRuleMap_Name()
  {
    return (EAttribute)ruleMapEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRuleMap_Rules()
  {
    return (EReference)ruleMapEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRuleDeclaration()
  {
    return ruleDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRuleDeclaration_Name()
  {
    return (EAttribute)ruleDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRuleDeclaration_Rules()
  {
    return (EReference)ruleDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getGenericRule()
  {
    return genericRuleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSchemaRule()
  {
    return schemaRuleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getArrayEditRules()
  {
    return arrayEditRulesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getArrayEditRules_Array()
  {
    return (EReference)arrayEditRulesEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEnumRule()
  {
    return enumRuleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAddAnnotationToSchema()
  {
    return addAnnotationToSchemaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAddAnnotationToSchema_SchemaType()
  {
    return (EAttribute)addAnnotationToSchemaEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAddAnnotationToSchema_Schema()
  {
    return (EReference)addAnnotationToSchemaEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAddAnnotationToSchema_Annotation()
  {
    return (EReference)addAnnotationToSchemaEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAddAnnotationToField()
  {
    return addAnnotationToFieldEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAddAnnotationToField_Variable()
  {
    return (EReference)addAnnotationToFieldEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAddAnnotationToField_Annotation()
  {
    return (EReference)addAnnotationToFieldEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAddNameAnnotationToField()
  {
    return addNameAnnotationToFieldEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAddNameAnnotationToField_Variable()
  {
    return (EReference)addNameAnnotationToFieldEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAddNameAnnotationToField_Annotation()
  {
    return (EReference)addNameAnnotationToFieldEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRemoveAnnotationFromSchema()
  {
    return removeAnnotationFromSchemaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRemoveAnnotationFromSchema_SchemaType()
  {
    return (EAttribute)removeAnnotationFromSchemaEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRemoveAnnotationFromSchema_Schema()
  {
    return (EReference)removeAnnotationFromSchemaEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRemoveAnnotationFromSchema_AnnotationToRemove()
  {
    return (EReference)removeAnnotationFromSchemaEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRemoveAnnotationFromField()
  {
    return removeAnnotationFromFieldEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRemoveAnnotationFromField_Variable()
  {
    return (EReference)removeAnnotationFromFieldEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRemoveAnnotationFromField_AnnotationToRemove()
  {
    return (EReference)removeAnnotationFromFieldEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRemoveNameAnnotationFromField()
  {
    return removeNameAnnotationFromFieldEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRemoveNameAnnotationFromField_Variable()
  {
    return (EReference)removeNameAnnotationFromFieldEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRemoveNameAnnotationFromField_AnnotationToRemove()
  {
    return (EReference)removeNameAnnotationFromFieldEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getChangeSchema()
  {
    return changeSchemaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getChangeSchema_SchemaType()
  {
    return (EAttribute)changeSchemaEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getChangeSchema_Schema()
  {
    return (EReference)changeSchemaEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getChangeSchema_Rules()
  {
    return (EReference)changeSchemaEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getChangeEnum()
  {
    return changeEnumEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getChangeEnum_Schema()
  {
    return (EReference)changeEnumEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getChangeEnum_Rules()
  {
    return (EReference)changeEnumEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAdd()
  {
    return addEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAdd_Index()
  {
    return (EAttribute)addEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAdd_Namespace()
  {
    return (EReference)addEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAddRecord()
  {
    return addRecordEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAddRecord_RecordName()
  {
    return (EAttribute)addRecordEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAddRecord_Fields()
  {
    return (EReference)addRecordEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAddError()
  {
    return addErrorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAddError_ErrorName()
  {
    return (EAttribute)addErrorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAddError_Fields()
  {
    return (EReference)addErrorEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAddEnumeration()
  {
    return addEnumerationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAddEnumeration_EnumName()
  {
    return (EAttribute)addEnumerationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAddEnumeration_Symbols()
  {
    return (EAttribute)addEnumerationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAddVariable()
  {
    return addVariableEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAddVariable_Index()
  {
    return (EAttribute)addVariableEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAddVariable_NewVar()
  {
    return (EReference)addVariableEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAddEnum()
  {
    return addEnumEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAddEnum_Index()
  {
    return (EAttribute)addEnumEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAddEnum_VarName()
  {
    return (EAttribute)addEnumEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRemoveSchema()
  {
    return removeSchemaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRemoveSchema_SchemaType()
  {
    return (EAttribute)removeSchemaEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRemoveSchema_Schema()
  {
    return (EReference)removeSchemaEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRemoveVariable()
  {
    return removeVariableEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRemoveVariable_Variable()
  {
    return (EReference)removeVariableEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRemoveEnum()
  {
    return removeEnumEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRemoveEnum_VarName()
  {
    return (EAttribute)removeEnumEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRenameSchema()
  {
    return renameSchemaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRenameSchema_SchemaType()
  {
    return (EAttribute)renameSchemaEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRenameSchema_Schema()
  {
    return (EReference)renameSchemaEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRenameSchema_NewSchName()
  {
    return (EAttribute)renameSchemaEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRenameVariable()
  {
    return renameVariableEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRenameVariable_Variable()
  {
    return (EReference)renameVariableEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRenameVariable_NewVarName()
  {
    return (EAttribute)renameVariableEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRenameEnum()
  {
    return renameEnumEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRenameEnum_OldName()
  {
    return (EAttribute)renameEnumEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRenameEnum_NewEnumName()
  {
    return (EAttribute)renameEnumEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getChangeDefValue()
  {
    return changeDefValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getChangeDefValue_Field()
  {
    return (EReference)changeDefValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getChangeDefValue_NewVal()
  {
    return (EReference)changeDefValueEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getChangeType()
  {
    return changeTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getChangeType_Field()
  {
    return (EReference)changeTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getChangeType_NewType()
  {
    return (EAttribute)changeTypeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRemoveArrayValue()
  {
    return removeArrayValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRemoveArrayValue_ValueToRemove()
  {
    return (EReference)removeArrayValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRemoveArrayValueAtIndex()
  {
    return removeArrayValueAtIndexEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRemoveArrayValueAtIndex_Index()
  {
    return (EAttribute)removeArrayValueAtIndexEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAddValueToArray()
  {
    return addValueToArrayEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAddValueToArray_Index()
  {
    return (EAttribute)addValueToArrayEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getField()
  {
    return fieldEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getField_Annotations()
  {
    return (EReference)fieldEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getField_FieldType()
  {
    return (EReference)fieldEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCustomTypeField()
  {
    return customTypeFieldEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCustomTypeField_Type()
  {
    return (EReference)customTypeFieldEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCustomTypeField_NameAnnotations()
  {
    return (EReference)customTypeFieldEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCustomTypeField_VarName()
  {
    return (EAttribute)customTypeFieldEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPrimitiveTypeField()
  {
    return primitiveTypeFieldEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPrimitiveTypeField_Type()
  {
    return (EReference)primitiveTypeFieldEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPrimitiveTypeField_NameAnnotations()
  {
    return (EReference)primitiveTypeFieldEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPrimitiveTypeField_VarName()
  {
    return (EAttribute)primitiveTypeFieldEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPrimitiveTypeField_Value()
  {
    return (EReference)primitiveTypeFieldEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getComplexTypeField()
  {
    return complexTypeFieldEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getComplexTypeField_Type()
  {
    return (EReference)complexTypeFieldEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getComplexTypeField_NameAnnotations()
  {
    return (EReference)complexTypeFieldEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getComplexTypeField_VarName()
  {
    return (EAttribute)complexTypeFieldEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getComplexTypeField_Value()
  {
    return (EReference)complexTypeFieldEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getArrayTypeField()
  {
    return arrayTypeFieldEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getArrayTypeField_Type()
  {
    return (EReference)arrayTypeFieldEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAnnotatedTypes()
  {
    return annotatedTypesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAnnotatedTypes_Annotataions()
  {
    return (EReference)annotatedTypesEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAnnotatedTypes_Type()
  {
    return (EReference)annotatedTypesEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTypes()
  {
    return typesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCustomType()
  {
    return customTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCustomType_Target()
  {
    return (EReference)customTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPrimitiveType()
  {
    return primitiveTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPrimitiveType_Target()
  {
    return (EAttribute)primitiveTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAnnotation()
  {
    return annotationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAnnotation_Name()
  {
    return (EAttribute)annotationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAnnotation_Values()
  {
    return (EReference)annotationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getValues()
  {
    return valuesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getValues_Value()
  {
    return (EReference)valuesEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getArray()
  {
    return arrayEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getArray_Values()
  {
    return (EReference)arrayEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getValue()
  {
    return valueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFloatValue()
  {
    return floatValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFloatValue_Val()
  {
    return (EAttribute)floatValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStringValue()
  {
    return stringValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStringValue_Val()
  {
    return (EAttribute)stringValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getIntValue()
  {
    return intValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getIntValue_Val()
  {
    return (EAttribute)intValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNull()
  {
    return nullEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getNull_Val()
  {
    return (EAttribute)nullEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBooleanValue()
  {
    return booleanValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBooleanValue_Val()
  {
    return (EAttribute)booleanValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AeditFactory getAeditFactory()
  {
    return (AeditFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    modelEClass = createEClass(MODEL);
    createEReference(modelEClass, MODEL__RULE_DECLARATIONS);
    createEReference(modelEClass, MODEL__RULE_MAPS);
    createEReference(modelEClass, MODEL__FEATURES);
    createEReference(modelEClass, MODEL__FEATURE_MAPS);

    featureEClass = createEClass(FEATURE);
    createEAttribute(featureEClass, FEATURE__NAME);
    createEReference(featureEClass, FEATURE__EXTEND);
    createEReference(featureEClass, FEATURE__RULE_MAPS);

    featureMapEClass = createEClass(FEATURE_MAP);
    createEReference(featureMapEClass, FEATURE_MAP__NAME);

    ruleMapEClass = createEClass(RULE_MAP);
    createEAttribute(ruleMapEClass, RULE_MAP__NAME);
    createEReference(ruleMapEClass, RULE_MAP__RULES);

    ruleDeclarationEClass = createEClass(RULE_DECLARATION);
    createEAttribute(ruleDeclarationEClass, RULE_DECLARATION__NAME);
    createEReference(ruleDeclarationEClass, RULE_DECLARATION__RULES);

    genericRuleEClass = createEClass(GENERIC_RULE);

    schemaRuleEClass = createEClass(SCHEMA_RULE);

    arrayEditRulesEClass = createEClass(ARRAY_EDIT_RULES);
    createEReference(arrayEditRulesEClass, ARRAY_EDIT_RULES__ARRAY);

    enumRuleEClass = createEClass(ENUM_RULE);

    addAnnotationToSchemaEClass = createEClass(ADD_ANNOTATION_TO_SCHEMA);
    createEAttribute(addAnnotationToSchemaEClass, ADD_ANNOTATION_TO_SCHEMA__SCHEMA_TYPE);
    createEReference(addAnnotationToSchemaEClass, ADD_ANNOTATION_TO_SCHEMA__SCHEMA);
    createEReference(addAnnotationToSchemaEClass, ADD_ANNOTATION_TO_SCHEMA__ANNOTATION);

    addAnnotationToFieldEClass = createEClass(ADD_ANNOTATION_TO_FIELD);
    createEReference(addAnnotationToFieldEClass, ADD_ANNOTATION_TO_FIELD__VARIABLE);
    createEReference(addAnnotationToFieldEClass, ADD_ANNOTATION_TO_FIELD__ANNOTATION);

    addNameAnnotationToFieldEClass = createEClass(ADD_NAME_ANNOTATION_TO_FIELD);
    createEReference(addNameAnnotationToFieldEClass, ADD_NAME_ANNOTATION_TO_FIELD__VARIABLE);
    createEReference(addNameAnnotationToFieldEClass, ADD_NAME_ANNOTATION_TO_FIELD__ANNOTATION);

    removeAnnotationFromSchemaEClass = createEClass(REMOVE_ANNOTATION_FROM_SCHEMA);
    createEAttribute(removeAnnotationFromSchemaEClass, REMOVE_ANNOTATION_FROM_SCHEMA__SCHEMA_TYPE);
    createEReference(removeAnnotationFromSchemaEClass, REMOVE_ANNOTATION_FROM_SCHEMA__SCHEMA);
    createEReference(removeAnnotationFromSchemaEClass, REMOVE_ANNOTATION_FROM_SCHEMA__ANNOTATION_TO_REMOVE);

    removeAnnotationFromFieldEClass = createEClass(REMOVE_ANNOTATION_FROM_FIELD);
    createEReference(removeAnnotationFromFieldEClass, REMOVE_ANNOTATION_FROM_FIELD__VARIABLE);
    createEReference(removeAnnotationFromFieldEClass, REMOVE_ANNOTATION_FROM_FIELD__ANNOTATION_TO_REMOVE);

    removeNameAnnotationFromFieldEClass = createEClass(REMOVE_NAME_ANNOTATION_FROM_FIELD);
    createEReference(removeNameAnnotationFromFieldEClass, REMOVE_NAME_ANNOTATION_FROM_FIELD__VARIABLE);
    createEReference(removeNameAnnotationFromFieldEClass, REMOVE_NAME_ANNOTATION_FROM_FIELD__ANNOTATION_TO_REMOVE);

    changeSchemaEClass = createEClass(CHANGE_SCHEMA);
    createEAttribute(changeSchemaEClass, CHANGE_SCHEMA__SCHEMA_TYPE);
    createEReference(changeSchemaEClass, CHANGE_SCHEMA__SCHEMA);
    createEReference(changeSchemaEClass, CHANGE_SCHEMA__RULES);

    changeEnumEClass = createEClass(CHANGE_ENUM);
    createEReference(changeEnumEClass, CHANGE_ENUM__SCHEMA);
    createEReference(changeEnumEClass, CHANGE_ENUM__RULES);

    addEClass = createEClass(ADD);
    createEAttribute(addEClass, ADD__INDEX);
    createEReference(addEClass, ADD__NAMESPACE);

    addRecordEClass = createEClass(ADD_RECORD);
    createEAttribute(addRecordEClass, ADD_RECORD__RECORD_NAME);
    createEReference(addRecordEClass, ADD_RECORD__FIELDS);

    addErrorEClass = createEClass(ADD_ERROR);
    createEAttribute(addErrorEClass, ADD_ERROR__ERROR_NAME);
    createEReference(addErrorEClass, ADD_ERROR__FIELDS);

    addEnumerationEClass = createEClass(ADD_ENUMERATION);
    createEAttribute(addEnumerationEClass, ADD_ENUMERATION__ENUM_NAME);
    createEAttribute(addEnumerationEClass, ADD_ENUMERATION__SYMBOLS);

    addVariableEClass = createEClass(ADD_VARIABLE);
    createEAttribute(addVariableEClass, ADD_VARIABLE__INDEX);
    createEReference(addVariableEClass, ADD_VARIABLE__NEW_VAR);

    addEnumEClass = createEClass(ADD_ENUM);
    createEAttribute(addEnumEClass, ADD_ENUM__INDEX);
    createEAttribute(addEnumEClass, ADD_ENUM__VAR_NAME);

    removeSchemaEClass = createEClass(REMOVE_SCHEMA);
    createEAttribute(removeSchemaEClass, REMOVE_SCHEMA__SCHEMA_TYPE);
    createEReference(removeSchemaEClass, REMOVE_SCHEMA__SCHEMA);

    removeVariableEClass = createEClass(REMOVE_VARIABLE);
    createEReference(removeVariableEClass, REMOVE_VARIABLE__VARIABLE);

    removeEnumEClass = createEClass(REMOVE_ENUM);
    createEAttribute(removeEnumEClass, REMOVE_ENUM__VAR_NAME);

    renameSchemaEClass = createEClass(RENAME_SCHEMA);
    createEAttribute(renameSchemaEClass, RENAME_SCHEMA__SCHEMA_TYPE);
    createEReference(renameSchemaEClass, RENAME_SCHEMA__SCHEMA);
    createEAttribute(renameSchemaEClass, RENAME_SCHEMA__NEW_SCH_NAME);

    renameVariableEClass = createEClass(RENAME_VARIABLE);
    createEReference(renameVariableEClass, RENAME_VARIABLE__VARIABLE);
    createEAttribute(renameVariableEClass, RENAME_VARIABLE__NEW_VAR_NAME);

    renameEnumEClass = createEClass(RENAME_ENUM);
    createEAttribute(renameEnumEClass, RENAME_ENUM__OLD_NAME);
    createEAttribute(renameEnumEClass, RENAME_ENUM__NEW_ENUM_NAME);

    changeDefValueEClass = createEClass(CHANGE_DEF_VALUE);
    createEReference(changeDefValueEClass, CHANGE_DEF_VALUE__FIELD);
    createEReference(changeDefValueEClass, CHANGE_DEF_VALUE__NEW_VAL);

    changeTypeEClass = createEClass(CHANGE_TYPE);
    createEReference(changeTypeEClass, CHANGE_TYPE__FIELD);
    createEAttribute(changeTypeEClass, CHANGE_TYPE__NEW_TYPE);

    removeArrayValueEClass = createEClass(REMOVE_ARRAY_VALUE);
    createEReference(removeArrayValueEClass, REMOVE_ARRAY_VALUE__VALUE_TO_REMOVE);

    removeArrayValueAtIndexEClass = createEClass(REMOVE_ARRAY_VALUE_AT_INDEX);
    createEAttribute(removeArrayValueAtIndexEClass, REMOVE_ARRAY_VALUE_AT_INDEX__INDEX);

    addValueToArrayEClass = createEClass(ADD_VALUE_TO_ARRAY);
    createEAttribute(addValueToArrayEClass, ADD_VALUE_TO_ARRAY__INDEX);

    fieldEClass = createEClass(FIELD);
    createEReference(fieldEClass, FIELD__ANNOTATIONS);
    createEReference(fieldEClass, FIELD__FIELD_TYPE);

    customTypeFieldEClass = createEClass(CUSTOM_TYPE_FIELD);
    createEReference(customTypeFieldEClass, CUSTOM_TYPE_FIELD__TYPE);
    createEReference(customTypeFieldEClass, CUSTOM_TYPE_FIELD__NAME_ANNOTATIONS);
    createEAttribute(customTypeFieldEClass, CUSTOM_TYPE_FIELD__VAR_NAME);

    primitiveTypeFieldEClass = createEClass(PRIMITIVE_TYPE_FIELD);
    createEReference(primitiveTypeFieldEClass, PRIMITIVE_TYPE_FIELD__TYPE);
    createEReference(primitiveTypeFieldEClass, PRIMITIVE_TYPE_FIELD__NAME_ANNOTATIONS);
    createEAttribute(primitiveTypeFieldEClass, PRIMITIVE_TYPE_FIELD__VAR_NAME);
    createEReference(primitiveTypeFieldEClass, PRIMITIVE_TYPE_FIELD__VALUE);

    complexTypeFieldEClass = createEClass(COMPLEX_TYPE_FIELD);
    createEReference(complexTypeFieldEClass, COMPLEX_TYPE_FIELD__TYPE);
    createEReference(complexTypeFieldEClass, COMPLEX_TYPE_FIELD__NAME_ANNOTATIONS);
    createEAttribute(complexTypeFieldEClass, COMPLEX_TYPE_FIELD__VAR_NAME);
    createEReference(complexTypeFieldEClass, COMPLEX_TYPE_FIELD__VALUE);

    arrayTypeFieldEClass = createEClass(ARRAY_TYPE_FIELD);
    createEReference(arrayTypeFieldEClass, ARRAY_TYPE_FIELD__TYPE);

    annotatedTypesEClass = createEClass(ANNOTATED_TYPES);
    createEReference(annotatedTypesEClass, ANNOTATED_TYPES__ANNOTATAIONS);
    createEReference(annotatedTypesEClass, ANNOTATED_TYPES__TYPE);

    typesEClass = createEClass(TYPES);

    customTypeEClass = createEClass(CUSTOM_TYPE);
    createEReference(customTypeEClass, CUSTOM_TYPE__TARGET);

    primitiveTypeEClass = createEClass(PRIMITIVE_TYPE);
    createEAttribute(primitiveTypeEClass, PRIMITIVE_TYPE__TARGET);

    annotationEClass = createEClass(ANNOTATION);
    createEAttribute(annotationEClass, ANNOTATION__NAME);
    createEReference(annotationEClass, ANNOTATION__VALUES);

    valuesEClass = createEClass(VALUES);
    createEReference(valuesEClass, VALUES__VALUE);

    arrayEClass = createEClass(ARRAY);
    createEReference(arrayEClass, ARRAY__VALUES);

    valueEClass = createEClass(VALUE);

    floatValueEClass = createEClass(FLOAT_VALUE);
    createEAttribute(floatValueEClass, FLOAT_VALUE__VAL);

    stringValueEClass = createEClass(STRING_VALUE);
    createEAttribute(stringValueEClass, STRING_VALUE__VAL);

    intValueEClass = createEClass(INT_VALUE);
    createEAttribute(intValueEClass, INT_VALUE__VAL);

    nullEClass = createEClass(NULL);
    createEAttribute(nullEClass, NULL__VAL);

    booleanValueEClass = createEClass(BOOLEAN_VALUE);
    createEAttribute(booleanValueEClass, BOOLEAN_VALUE__VAL);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Obtain other dependent packages
    AvroIDLPackage theAvroIDLPackage = (AvroIDLPackage)EPackage.Registry.INSTANCE.getEPackage(AvroIDLPackage.eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    arrayEditRulesEClass.getESuperTypes().add(this.getSchemaRule());
    addAnnotationToSchemaEClass.getESuperTypes().add(this.getGenericRule());
    addAnnotationToFieldEClass.getESuperTypes().add(this.getSchemaRule());
    addNameAnnotationToFieldEClass.getESuperTypes().add(this.getSchemaRule());
    removeAnnotationFromSchemaEClass.getESuperTypes().add(this.getGenericRule());
    removeAnnotationFromFieldEClass.getESuperTypes().add(this.getSchemaRule());
    removeNameAnnotationFromFieldEClass.getESuperTypes().add(this.getSchemaRule());
    changeSchemaEClass.getESuperTypes().add(this.getGenericRule());
    changeEnumEClass.getESuperTypes().add(this.getGenericRule());
    addEClass.getESuperTypes().add(this.getGenericRule());
    addRecordEClass.getESuperTypes().add(this.getAdd());
    addErrorEClass.getESuperTypes().add(this.getAdd());
    addEnumerationEClass.getESuperTypes().add(this.getAdd());
    addVariableEClass.getESuperTypes().add(this.getSchemaRule());
    addEnumEClass.getESuperTypes().add(this.getEnumRule());
    removeSchemaEClass.getESuperTypes().add(this.getGenericRule());
    removeVariableEClass.getESuperTypes().add(this.getSchemaRule());
    removeEnumEClass.getESuperTypes().add(this.getEnumRule());
    renameSchemaEClass.getESuperTypes().add(this.getGenericRule());
    renameVariableEClass.getESuperTypes().add(this.getSchemaRule());
    renameEnumEClass.getESuperTypes().add(this.getEnumRule());
    changeDefValueEClass.getESuperTypes().add(this.getSchemaRule());
    changeTypeEClass.getESuperTypes().add(this.getSchemaRule());
    removeArrayValueEClass.getESuperTypes().add(this.getArrayEditRules());
    removeArrayValueAtIndexEClass.getESuperTypes().add(this.getArrayEditRules());
    addValueToArrayEClass.getESuperTypes().add(this.getArrayEditRules());
    arrayTypeFieldEClass.getESuperTypes().add(this.getTypes());
    customTypeEClass.getESuperTypes().add(this.getTypes());
    primitiveTypeEClass.getESuperTypes().add(this.getTypes());
    floatValueEClass.getESuperTypes().add(this.getValue());
    stringValueEClass.getESuperTypes().add(this.getValue());
    intValueEClass.getESuperTypes().add(this.getValue());
    nullEClass.getESuperTypes().add(this.getValue());
    booleanValueEClass.getESuperTypes().add(this.getValue());

    // Initialize classes and features; add operations and parameters
    initEClass(modelEClass, Model.class, "Model", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getModel_RuleDeclarations(), this.getRuleDeclaration(), null, "ruleDeclarations", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_RuleMaps(), this.getRuleMap(), null, "ruleMaps", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_Features(), this.getFeature(), null, "features", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_FeatureMaps(), this.getFeatureMap(), null, "featureMaps", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(featureEClass, Feature.class, "Feature", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFeature_Name(), ecorePackage.getEString(), "name", null, 0, 1, Feature.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFeature_Extend(), this.getFeature(), null, "extend", null, 0, 1, Feature.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFeature_RuleMaps(), this.getRuleMap(), null, "ruleMaps", null, 0, -1, Feature.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(featureMapEClass, FeatureMap.class, "FeatureMap", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFeatureMap_Name(), this.getFeature(), null, "name", null, 0, 1, FeatureMap.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ruleMapEClass, RuleMap.class, "RuleMap", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRuleMap_Name(), ecorePackage.getEString(), "name", null, 0, 1, RuleMap.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRuleMap_Rules(), this.getRuleDeclaration(), null, "rules", null, 0, -1, RuleMap.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ruleDeclarationEClass, RuleDeclaration.class, "RuleDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRuleDeclaration_Name(), ecorePackage.getEString(), "name", null, 0, 1, RuleDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRuleDeclaration_Rules(), this.getGenericRule(), null, "rules", null, 0, -1, RuleDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(genericRuleEClass, GenericRule.class, "GenericRule", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(schemaRuleEClass, SchemaRule.class, "SchemaRule", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(arrayEditRulesEClass, ArrayEditRules.class, "ArrayEditRules", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getArrayEditRules_Array(), theAvroIDLPackage.getField(), null, "array", null, 0, 1, ArrayEditRules.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(enumRuleEClass, EnumRule.class, "EnumRule", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(addAnnotationToSchemaEClass, AddAnnotationToSchema.class, "AddAnnotationToSchema", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAddAnnotationToSchema_SchemaType(), ecorePackage.getEString(), "schemaType", null, 0, 1, AddAnnotationToSchema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAddAnnotationToSchema_Schema(), theAvroIDLPackage.getType(), null, "schema", null, 0, 1, AddAnnotationToSchema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAddAnnotationToSchema_Annotation(), this.getAnnotation(), null, "annotation", null, 0, 1, AddAnnotationToSchema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(addAnnotationToFieldEClass, AddAnnotationToField.class, "AddAnnotationToField", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAddAnnotationToField_Variable(), theAvroIDLPackage.getField(), null, "variable", null, 0, 1, AddAnnotationToField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAddAnnotationToField_Annotation(), this.getAnnotation(), null, "annotation", null, 0, 1, AddAnnotationToField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(addNameAnnotationToFieldEClass, AddNameAnnotationToField.class, "AddNameAnnotationToField", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAddNameAnnotationToField_Variable(), theAvroIDLPackage.getField(), null, "variable", null, 0, 1, AddNameAnnotationToField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAddNameAnnotationToField_Annotation(), this.getAnnotation(), null, "annotation", null, 0, 1, AddNameAnnotationToField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(removeAnnotationFromSchemaEClass, RemoveAnnotationFromSchema.class, "RemoveAnnotationFromSchema", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRemoveAnnotationFromSchema_SchemaType(), ecorePackage.getEString(), "schemaType", null, 0, 1, RemoveAnnotationFromSchema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRemoveAnnotationFromSchema_Schema(), theAvroIDLPackage.getType(), null, "schema", null, 0, 1, RemoveAnnotationFromSchema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRemoveAnnotationFromSchema_AnnotationToRemove(), theAvroIDLPackage.getAnnotation(), null, "annotationToRemove", null, 0, 1, RemoveAnnotationFromSchema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(removeAnnotationFromFieldEClass, RemoveAnnotationFromField.class, "RemoveAnnotationFromField", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRemoveAnnotationFromField_Variable(), theAvroIDLPackage.getField(), null, "variable", null, 0, 1, RemoveAnnotationFromField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRemoveAnnotationFromField_AnnotationToRemove(), theAvroIDLPackage.getAnnotation(), null, "annotationToRemove", null, 0, 1, RemoveAnnotationFromField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(removeNameAnnotationFromFieldEClass, RemoveNameAnnotationFromField.class, "RemoveNameAnnotationFromField", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRemoveNameAnnotationFromField_Variable(), theAvroIDLPackage.getField(), null, "variable", null, 0, 1, RemoveNameAnnotationFromField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRemoveNameAnnotationFromField_AnnotationToRemove(), theAvroIDLPackage.getAnnotation(), null, "annotationToRemove", null, 0, 1, RemoveNameAnnotationFromField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(changeSchemaEClass, ChangeSchema.class, "ChangeSchema", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getChangeSchema_SchemaType(), ecorePackage.getEString(), "schemaType", null, 0, 1, ChangeSchema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getChangeSchema_Schema(), theAvroIDLPackage.getType(), null, "schema", null, 0, 1, ChangeSchema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getChangeSchema_Rules(), this.getSchemaRule(), null, "rules", null, 0, -1, ChangeSchema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(changeEnumEClass, ChangeEnum.class, "ChangeEnum", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getChangeEnum_Schema(), theAvroIDLPackage.getEnumType(), null, "schema", null, 0, 1, ChangeEnum.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getChangeEnum_Rules(), this.getEnumRule(), null, "rules", null, 0, -1, ChangeEnum.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(addEClass, Add.class, "Add", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAdd_Index(), ecorePackage.getEInt(), "index", null, 0, 1, Add.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAdd_Namespace(), theAvroIDLPackage.getAvroIDLFile(), null, "namespace", null, 0, 1, Add.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(addRecordEClass, AddRecord.class, "AddRecord", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAddRecord_RecordName(), ecorePackage.getEString(), "recordName", null, 0, 1, AddRecord.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAddRecord_Fields(), this.getField(), null, "fields", null, 0, -1, AddRecord.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(addErrorEClass, AddError.class, "AddError", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAddError_ErrorName(), ecorePackage.getEString(), "errorName", null, 0, 1, AddError.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAddError_Fields(), this.getField(), null, "fields", null, 0, -1, AddError.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(addEnumerationEClass, AddEnumeration.class, "AddEnumeration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAddEnumeration_EnumName(), ecorePackage.getEString(), "enumName", null, 0, 1, AddEnumeration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAddEnumeration_Symbols(), ecorePackage.getEString(), "symbols", null, 0, -1, AddEnumeration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(addVariableEClass, AddVariable.class, "AddVariable", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAddVariable_Index(), ecorePackage.getEInt(), "index", null, 0, 1, AddVariable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAddVariable_NewVar(), this.getField(), null, "newVar", null, 0, 1, AddVariable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(addEnumEClass, AddEnum.class, "AddEnum", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAddEnum_Index(), ecorePackage.getEInt(), "index", null, 0, 1, AddEnum.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAddEnum_VarName(), ecorePackage.getEString(), "varName", null, 0, 1, AddEnum.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(removeSchemaEClass, RemoveSchema.class, "RemoveSchema", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRemoveSchema_SchemaType(), ecorePackage.getEString(), "schemaType", null, 0, 1, RemoveSchema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRemoveSchema_Schema(), theAvroIDLPackage.getType(), null, "schema", null, 0, 1, RemoveSchema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(removeVariableEClass, RemoveVariable.class, "RemoveVariable", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRemoveVariable_Variable(), theAvroIDLPackage.getField(), null, "variable", null, 0, 1, RemoveVariable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(removeEnumEClass, RemoveEnum.class, "RemoveEnum", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRemoveEnum_VarName(), ecorePackage.getEString(), "varName", null, 0, 1, RemoveEnum.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(renameSchemaEClass, RenameSchema.class, "RenameSchema", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRenameSchema_SchemaType(), ecorePackage.getEString(), "schemaType", null, 0, 1, RenameSchema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRenameSchema_Schema(), theAvroIDLPackage.getType(), null, "schema", null, 0, 1, RenameSchema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRenameSchema_NewSchName(), ecorePackage.getEString(), "newSchName", null, 0, 1, RenameSchema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(renameVariableEClass, RenameVariable.class, "RenameVariable", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRenameVariable_Variable(), theAvroIDLPackage.getField(), null, "variable", null, 0, 1, RenameVariable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRenameVariable_NewVarName(), ecorePackage.getEString(), "newVarName", null, 0, 1, RenameVariable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(renameEnumEClass, RenameEnum.class, "RenameEnum", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRenameEnum_OldName(), ecorePackage.getEString(), "oldName", null, 0, 1, RenameEnum.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRenameEnum_NewEnumName(), ecorePackage.getEString(), "newEnumName", null, 0, 1, RenameEnum.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(changeDefValueEClass, ChangeDefValue.class, "ChangeDefValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getChangeDefValue_Field(), theAvroIDLPackage.getField(), null, "field", null, 0, 1, ChangeDefValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getChangeDefValue_NewVal(), this.getValue(), null, "newVal", null, 0, 1, ChangeDefValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(changeTypeEClass, ChangeType.class, "ChangeType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getChangeType_Field(), theAvroIDLPackage.getField(), null, "field", null, 0, 1, ChangeType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getChangeType_NewType(), ecorePackage.getEString(), "newType", null, 0, 1, ChangeType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(removeArrayValueEClass, RemoveArrayValue.class, "RemoveArrayValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRemoveArrayValue_ValueToRemove(), this.getValue(), null, "valueToRemove", null, 0, 1, RemoveArrayValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(removeArrayValueAtIndexEClass, RemoveArrayValueAtIndex.class, "RemoveArrayValueAtIndex", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRemoveArrayValueAtIndex_Index(), ecorePackage.getEInt(), "index", null, 0, 1, RemoveArrayValueAtIndex.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(addValueToArrayEClass, AddValueToArray.class, "AddValueToArray", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAddValueToArray_Index(), ecorePackage.getEInt(), "index", null, 0, 1, AddValueToArray.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fieldEClass, Field.class, "Field", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getField_Annotations(), this.getAnnotation(), null, "annotations", null, 0, -1, Field.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getField_FieldType(), ecorePackage.getEObject(), null, "fieldType", null, 0, 1, Field.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(customTypeFieldEClass, CustomTypeField.class, "CustomTypeField", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCustomTypeField_Type(), this.getCustomType(), null, "type", null, 0, 1, CustomTypeField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCustomTypeField_NameAnnotations(), this.getAnnotation(), null, "nameAnnotations", null, 0, -1, CustomTypeField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCustomTypeField_VarName(), ecorePackage.getEString(), "varName", null, 0, 1, CustomTypeField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(primitiveTypeFieldEClass, PrimitiveTypeField.class, "PrimitiveTypeField", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPrimitiveTypeField_Type(), this.getPrimitiveType(), null, "type", null, 0, 1, PrimitiveTypeField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPrimitiveTypeField_NameAnnotations(), this.getAnnotation(), null, "nameAnnotations", null, 0, -1, PrimitiveTypeField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPrimitiveTypeField_VarName(), ecorePackage.getEString(), "varName", null, 0, 1, PrimitiveTypeField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPrimitiveTypeField_Value(), this.getValue(), null, "value", null, 0, 1, PrimitiveTypeField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(complexTypeFieldEClass, ComplexTypeField.class, "ComplexTypeField", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getComplexTypeField_Type(), this.getArrayTypeField(), null, "type", null, 0, 1, ComplexTypeField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getComplexTypeField_NameAnnotations(), this.getAnnotation(), null, "nameAnnotations", null, 0, -1, ComplexTypeField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getComplexTypeField_VarName(), ecorePackage.getEString(), "varName", null, 0, 1, ComplexTypeField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getComplexTypeField_Value(), this.getArray(), null, "value", null, 0, 1, ComplexTypeField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(arrayTypeFieldEClass, ArrayTypeField.class, "ArrayTypeField", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getArrayTypeField_Type(), this.getAnnotatedTypes(), null, "type", null, 0, 1, ArrayTypeField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(annotatedTypesEClass, AnnotatedTypes.class, "AnnotatedTypes", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAnnotatedTypes_Annotataions(), this.getAnnotation(), null, "annotataions", null, 0, -1, AnnotatedTypes.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAnnotatedTypes_Type(), this.getTypes(), null, "type", null, 0, 1, AnnotatedTypes.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(typesEClass, Types.class, "Types", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(customTypeEClass, CustomType.class, "CustomType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCustomType_Target(), theAvroIDLPackage.getType(), null, "target", null, 0, 1, CustomType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(primitiveTypeEClass, PrimitiveType.class, "PrimitiveType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPrimitiveType_Target(), ecorePackage.getEString(), "target", null, 0, 1, PrimitiveType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(annotationEClass, Annotation.class, "Annotation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAnnotation_Name(), ecorePackage.getEString(), "name", null, 0, 1, Annotation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAnnotation_Values(), this.getValues(), null, "values", null, 0, 1, Annotation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(valuesEClass, Values.class, "Values", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getValues_Value(), ecorePackage.getEObject(), null, "value", null, 0, -1, Values.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(arrayEClass, Array.class, "Array", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getArray_Values(), this.getValues(), null, "values", null, 0, 1, Array.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(valueEClass, Value.class, "Value", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(floatValueEClass, FloatValue.class, "FloatValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFloatValue_Val(), ecorePackage.getEFloat(), "val", null, 0, 1, FloatValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(stringValueEClass, StringValue.class, "StringValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getStringValue_Val(), ecorePackage.getEString(), "val", null, 0, 1, StringValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(intValueEClass, IntValue.class, "IntValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getIntValue_Val(), ecorePackage.getEInt(), "val", null, 0, 1, IntValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(nullEClass, Null.class, "Null", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getNull_Val(), ecorePackage.getEString(), "val", null, 0, 1, Null.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(booleanValueEClass, BooleanValue.class, "BooleanValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBooleanValue_Val(), ecorePackage.getEBoolean(), "val", null, 0, 1, BooleanValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //AeditPackageImpl
