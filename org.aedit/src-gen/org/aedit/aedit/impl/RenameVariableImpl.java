/**
 * generated by Xtext 2.21.0
 */
package org.aedit.aedit.impl;

import avroclipse.avroIDL.Field;

import org.aedit.aedit.AeditPackage;
import org.aedit.aedit.RenameVariable;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Rename Variable</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.aedit.aedit.impl.RenameVariableImpl#getVariable <em>Variable</em>}</li>
 *   <li>{@link org.aedit.aedit.impl.RenameVariableImpl#getNewVarName <em>New Var Name</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RenameVariableImpl extends SchemaRuleImpl implements RenameVariable
{
  /**
   * The cached value of the '{@link #getVariable() <em>Variable</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariable()
   * @generated
   * @ordered
   */
  protected Field variable;

  /**
   * The default value of the '{@link #getNewVarName() <em>New Var Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNewVarName()
   * @generated
   * @ordered
   */
  protected static final String NEW_VAR_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNewVarName() <em>New Var Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNewVarName()
   * @generated
   * @ordered
   */
  protected String newVarName = NEW_VAR_NAME_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RenameVariableImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AeditPackage.Literals.RENAME_VARIABLE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Field getVariable()
  {
    if (variable != null && variable.eIsProxy())
    {
      InternalEObject oldVariable = (InternalEObject)variable;
      variable = (Field)eResolveProxy(oldVariable);
      if (variable != oldVariable)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, AeditPackage.RENAME_VARIABLE__VARIABLE, oldVariable, variable));
      }
    }
    return variable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Field basicGetVariable()
  {
    return variable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVariable(Field newVariable)
  {
    Field oldVariable = variable;
    variable = newVariable;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AeditPackage.RENAME_VARIABLE__VARIABLE, oldVariable, variable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getNewVarName()
  {
    return newVarName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNewVarName(String newNewVarName)
  {
    String oldNewVarName = newVarName;
    newVarName = newNewVarName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AeditPackage.RENAME_VARIABLE__NEW_VAR_NAME, oldNewVarName, newVarName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AeditPackage.RENAME_VARIABLE__VARIABLE:
        if (resolve) return getVariable();
        return basicGetVariable();
      case AeditPackage.RENAME_VARIABLE__NEW_VAR_NAME:
        return getNewVarName();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AeditPackage.RENAME_VARIABLE__VARIABLE:
        setVariable((Field)newValue);
        return;
      case AeditPackage.RENAME_VARIABLE__NEW_VAR_NAME:
        setNewVarName((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AeditPackage.RENAME_VARIABLE__VARIABLE:
        setVariable((Field)null);
        return;
      case AeditPackage.RENAME_VARIABLE__NEW_VAR_NAME:
        setNewVarName(NEW_VAR_NAME_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AeditPackage.RENAME_VARIABLE__VARIABLE:
        return variable != null;
      case AeditPackage.RENAME_VARIABLE__NEW_VAR_NAME:
        return NEW_VAR_NAME_EDEFAULT == null ? newVarName != null : !NEW_VAR_NAME_EDEFAULT.equals(newVarName);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (newVarName: ");
    result.append(newVarName);
    result.append(')');
    return result.toString();
  }

} //RenameVariableImpl
