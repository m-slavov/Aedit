/**
 * generated by Xtext 2.12.0
 */
package org.aedit.aedit.impl;

import org.aedit.aedit.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class AeditFactoryImpl extends EFactoryImpl implements AeditFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static AeditFactory init()
  {
    try
    {
      AeditFactory theAeditFactory = (AeditFactory)EPackage.Registry.INSTANCE.getEFactory(AeditPackage.eNS_URI);
      if (theAeditFactory != null)
      {
        return theAeditFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new AeditFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AeditFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case AeditPackage.MODEL: return createModel();
      case AeditPackage.FEATURE: return createFeature();
      case AeditPackage.FEATURE_MAP: return createFeatureMap();
      case AeditPackage.RULE_MAP: return createRuleMap();
      case AeditPackage.RULE_DECLARATION: return createRuleDeclaration();
      case AeditPackage.GENERIC_RULE: return createGenericRule();
      case AeditPackage.SCHEMA_RULE: return createSchemaRule();
      case AeditPackage.ENUM_RULE: return createEnumRule();
      case AeditPackage.CHANGE_SCHEMA: return createChangeSchema();
      case AeditPackage.CHANGE_ENUM: return createChangeEnum();
      case AeditPackage.ADD: return createAdd();
      case AeditPackage.ADD_RECORD: return createAddRecord();
      case AeditPackage.ADD_ENUMERATION: return createAddEnumeration();
      case AeditPackage.ADD_VARIABLE: return createAddVariable();
      case AeditPackage.ADD_ENUM: return createAddEnum();
      case AeditPackage.REMOVE_SCHEMA: return createRemoveSchema();
      case AeditPackage.REMOVE_VARIABLE: return createRemoveVariable();
      case AeditPackage.REMOVE_ENUM: return createRemoveEnum();
      case AeditPackage.RENAME_SCHEMA: return createRenameSchema();
      case AeditPackage.RENAME_VARIABLE: return createRenameVariable();
      case AeditPackage.RENAME_ENUM: return createRenameEnum();
      case AeditPackage.CHANGE_DEF_VALUE: return createChangeDefValue();
      case AeditPackage.CHANGE_TYPE: return createChangeType();
      case AeditPackage.FIELD: return createField();
      case AeditPackage.VALUE: return createValue();
      case AeditPackage.FLOAT_VALUE: return createFloatValue();
      case AeditPackage.STRING_VALUE: return createStringValue();
      case AeditPackage.INT_VALUE: return createIntValue();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Feature createFeature()
  {
    FeatureImpl feature = new FeatureImpl();
    return feature;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FeatureMap createFeatureMap()
  {
    FeatureMapImpl featureMap = new FeatureMapImpl();
    return featureMap;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RuleMap createRuleMap()
  {
    RuleMapImpl ruleMap = new RuleMapImpl();
    return ruleMap;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RuleDeclaration createRuleDeclaration()
  {
    RuleDeclarationImpl ruleDeclaration = new RuleDeclarationImpl();
    return ruleDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GenericRule createGenericRule()
  {
    GenericRuleImpl genericRule = new GenericRuleImpl();
    return genericRule;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SchemaRule createSchemaRule()
  {
    SchemaRuleImpl schemaRule = new SchemaRuleImpl();
    return schemaRule;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EnumRule createEnumRule()
  {
    EnumRuleImpl enumRule = new EnumRuleImpl();
    return enumRule;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ChangeSchema createChangeSchema()
  {
    ChangeSchemaImpl changeSchema = new ChangeSchemaImpl();
    return changeSchema;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ChangeEnum createChangeEnum()
  {
    ChangeEnumImpl changeEnum = new ChangeEnumImpl();
    return changeEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Add createAdd()
  {
    AddImpl add = new AddImpl();
    return add;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AddRecord createAddRecord()
  {
    AddRecordImpl addRecord = new AddRecordImpl();
    return addRecord;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AddEnumeration createAddEnumeration()
  {
    AddEnumerationImpl addEnumeration = new AddEnumerationImpl();
    return addEnumeration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AddVariable createAddVariable()
  {
    AddVariableImpl addVariable = new AddVariableImpl();
    return addVariable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AddEnum createAddEnum()
  {
    AddEnumImpl addEnum = new AddEnumImpl();
    return addEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RemoveSchema createRemoveSchema()
  {
    RemoveSchemaImpl removeSchema = new RemoveSchemaImpl();
    return removeSchema;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RemoveVariable createRemoveVariable()
  {
    RemoveVariableImpl removeVariable = new RemoveVariableImpl();
    return removeVariable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RemoveEnum createRemoveEnum()
  {
    RemoveEnumImpl removeEnum = new RemoveEnumImpl();
    return removeEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RenameSchema createRenameSchema()
  {
    RenameSchemaImpl renameSchema = new RenameSchemaImpl();
    return renameSchema;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RenameVariable createRenameVariable()
  {
    RenameVariableImpl renameVariable = new RenameVariableImpl();
    return renameVariable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RenameEnum createRenameEnum()
  {
    RenameEnumImpl renameEnum = new RenameEnumImpl();
    return renameEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ChangeDefValue createChangeDefValue()
  {
    ChangeDefValueImpl changeDefValue = new ChangeDefValueImpl();
    return changeDefValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ChangeType createChangeType()
  {
    ChangeTypeImpl changeType = new ChangeTypeImpl();
    return changeType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Field createField()
  {
    FieldImpl field = new FieldImpl();
    return field;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Value createValue()
  {
    ValueImpl value = new ValueImpl();
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FloatValue createFloatValue()
  {
    FloatValueImpl floatValue = new FloatValueImpl();
    return floatValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StringValue createStringValue()
  {
    StringValueImpl stringValue = new StringValueImpl();
    return stringValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IntValue createIntValue()
  {
    IntValueImpl intValue = new IntValueImpl();
    return intValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AeditPackage getAeditPackage()
  {
    return (AeditPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static AeditPackage getPackage()
  {
    return AeditPackage.eINSTANCE;
  }

} //AeditFactoryImpl
