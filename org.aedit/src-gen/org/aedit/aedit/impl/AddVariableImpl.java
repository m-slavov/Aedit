/**
 * generated by Xtext 2.12.0
 */
package org.aedit.aedit.impl;

import org.aedit.aedit.AddVariable;
import org.aedit.aedit.AeditPackage;
import org.aedit.aedit.Field;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Add Variable</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.aedit.aedit.impl.AddVariableImpl#getIndex <em>Index</em>}</li>
 *   <li>{@link org.aedit.aedit.impl.AddVariableImpl#getNewVar <em>New Var</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AddVariableImpl extends SchemaRuleImpl implements AddVariable
{
  /**
   * The default value of the '{@link #getIndex() <em>Index</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIndex()
   * @generated
   * @ordered
   */
  protected static final int INDEX_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getIndex() <em>Index</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIndex()
   * @generated
   * @ordered
   */
  protected int index = INDEX_EDEFAULT;

  /**
   * The cached value of the '{@link #getNewVar() <em>New Var</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNewVar()
   * @generated
   * @ordered
   */
  protected Field newVar;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AddVariableImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AeditPackage.Literals.ADD_VARIABLE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getIndex()
  {
    return index;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIndex(int newIndex)
  {
    int oldIndex = index;
    index = newIndex;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AeditPackage.ADD_VARIABLE__INDEX, oldIndex, index));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Field getNewVar()
  {
    return newVar;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNewVar(Field newNewVar, NotificationChain msgs)
  {
    Field oldNewVar = newVar;
    newVar = newNewVar;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AeditPackage.ADD_VARIABLE__NEW_VAR, oldNewVar, newNewVar);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNewVar(Field newNewVar)
  {
    if (newNewVar != newVar)
    {
      NotificationChain msgs = null;
      if (newVar != null)
        msgs = ((InternalEObject)newVar).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AeditPackage.ADD_VARIABLE__NEW_VAR, null, msgs);
      if (newNewVar != null)
        msgs = ((InternalEObject)newNewVar).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AeditPackage.ADD_VARIABLE__NEW_VAR, null, msgs);
      msgs = basicSetNewVar(newNewVar, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AeditPackage.ADD_VARIABLE__NEW_VAR, newNewVar, newNewVar));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AeditPackage.ADD_VARIABLE__NEW_VAR:
        return basicSetNewVar(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AeditPackage.ADD_VARIABLE__INDEX:
        return getIndex();
      case AeditPackage.ADD_VARIABLE__NEW_VAR:
        return getNewVar();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AeditPackage.ADD_VARIABLE__INDEX:
        setIndex((Integer)newValue);
        return;
      case AeditPackage.ADD_VARIABLE__NEW_VAR:
        setNewVar((Field)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AeditPackage.ADD_VARIABLE__INDEX:
        setIndex(INDEX_EDEFAULT);
        return;
      case AeditPackage.ADD_VARIABLE__NEW_VAR:
        setNewVar((Field)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AeditPackage.ADD_VARIABLE__INDEX:
        return index != INDEX_EDEFAULT;
      case AeditPackage.ADD_VARIABLE__NEW_VAR:
        return newVar != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (index: ");
    result.append(index);
    result.append(')');
    return result.toString();
  }

} //AddVariableImpl
